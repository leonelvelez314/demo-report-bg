{"version":3,"sources":["componentes/buttonBG/buttonBG.tsx","componentes/selectMultipleBG/selectMultipleBG.tsx","componentes/modalBG/modalBG.tsx","componentes/modalContentBG/modalContentBG.tsx","componentes/gridViewBG/gridViewBG.tsx","logo.png","componentes/menuBG/menuBG.tsx","menu.tsx","data/catalogoValores.js","data/informacionFiltro.js","data/catalogoCampo.js","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ButtonBG","props","type","classe","shape","onClick","style","className","icon","text","SelectMultipleBG","useState","show","setShow","React","value","setValue","useEffect","mode","display","width","onChange","newValue","values","options","opciones","placeholder","maxTagCount","ModalBG","Modal","confirm","retornoFiltrosAplicados","Array","setOpen","valor","Promise","resolve","reject","setState","state","open","Open","setElementosFiltro","filtros","ElementosFiltro","onOpenModal","onChangeInputValue","e","a","setValues","valores","push","optenerCatalogosValues","id","tipoCatalogo","find","x","idContainer","catalogoValue","map","label","onChangeValue","filter","campo","length","recorre","createElementoFiltro","onChaneCampo","defaultValue","filtroCatalogoCampos","index","cammpo","transformarToItem","target","tipoDato","isCatalogo","format","justifyContent","alignItems","CloseOutlined","quitarFiltro","filtroInformacion","esCatalogo","catalogosValues","newFiltro","element","then","renderFiltro","tipoCatalogoAux","agregarFiltro","oldElements","elementosOrdenados","sort","b","idAsignada","estado","console","log","elementos","createElement","ReactDOM","render","document","getElementById","idIngreso","retorno","quitarFiltrosAll","onClearFiltro","okModal","onOk","longitud","cancelModla","onCancel","input","toUpperCase","substr","toLocaleLowerCase","prevProps","this","height","title","visible","okText","DeleteOutlined","PlusOutlined","overflowY","maxHeight","Component","ModalContentBG","setVisible","titulo","content","TabPane","Tabs","GridViewBG","badge","setBadge","openModalContent","setOpenModalContent","openModalColumn","setOpenModalColumn","columnsTotal","columnsTotales","setColumnsTotales","columns","columnsGrupo","setColumnsGrupos","rowsTotal","rowTotales","setRowTotales","rows","rowGrupos","setRowGrupos","filtrosAplicadosObjeto","setFiltrosAplicados","fechaAnterior","Date","moment","subtract","toDate","fechaActual","onLoad","filtrosAplicados","getColumnsGroup","tipoColumna","items","tituloGrupo","recorreChildre","indexChildren","undefined","dataIndex","key","obtenerTreeColumnas","tipoGrid","data","obtenerTreeData","trim","children","onCheck","checkedKeys","keys","columnGroupTitle","tipo","toLowerCase","forEach","seleccionado","elementKey","defaultCheckedKeys","treeData","checkable","childrenTree","recorreItem","indexItem","onBuscar","onChangeFechaFechaAnterior","onChangeFechaFechaActual","marginRight","defaultActiveKey","tabPosition","tab","marginBottom","name","marginLeft","buttonFilter","ReloadOutlined","count","color","FunnelPlotOutlined","pagination","dataSource","scroll","y","expandable","expandedRowRender","onOpenDetalle","buttonDownload","DownloadOutlined","FileOutlined","RotateRightOutlined","centered","dataSetGraficos","anual","mensual","filtroCatalogoValues","onAplicarFiltro","FileExcelOutlined","FilePdfOutlined","MenuBG","src","imagen","marginTop","overlay","Item","href","trigger","textAlign","border","borderStyle","borderColor","padding","borderRadius","preventDefault","pageWrapId","outerContainerId","flexDirection","defaultSelectedKeys","defaultOpenKeys","nombre","idItem","tituloPagina","menu","informacionFiltro","CatalogoCampos","App","menuBG","codigo","toString","descripcion","anterior","cuenta","saldo","tasa","actual","variacion","dataSimuladaGrafico","objeto","labels","i","diasMeses","datasets","fill","tension","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"6dA4CeA,EA7BE,SAACC,GAEd,IAAIC,EAAkB,UAClBC,EAAS,SACb,OAAOF,EAAMC,MAET,IAAK,UAEDC,EAAS,UACTD,EAAO,QACP,MACJ,IAAK,SACDA,EAAO,UACPC,EAAS,SAWjB,OAAQ,mCACJ,eAAC,IAAD,CAAQC,MAAOH,EAAMG,MAAOC,QAPhB,WACTJ,EAAMI,SAELJ,EAAMI,WAIoCC,MAAOL,EAAMK,MAAOC,UAAWJ,EAAQD,KAAMA,EAAMM,KAAMP,EAAMO,KAA7G,cAAqHP,EAAMQ,W,0JCVpHC,G,OArBU,SAACT,GAEtB,MAAwBU,mBAASV,EAAMW,MAAvC,mBAAOA,EAAP,KAAaC,EAAb,KACA,EAA0BC,IAAMH,SAAS,IAAzC,mBAAOI,EAAP,KAAcC,EAAd,KAEAC,qBAAU,WACNJ,EAAQZ,EAAMW,QACf,CAACX,EAAMW,OASV,OAAQ,mCACA,cAAC,IAAD,CAAQM,KAAK,WAAYZ,MAAO,CAAEa,QAAQP,EAAK,SAAS,OAAQQ,MAAM,SAAUL,MAAOA,EAAOM,SAThF,SAACC,GACnBN,EAASM,GACNrB,EAAMoB,WAELpB,EAAMoB,SAAS,CAACE,OAAOD,IACvBN,EAASM,KAI+GE,QAASvB,EAAMwB,SAAUC,YAAY,UAAUC,YAAY,mBCc1KC,GAhCDC,IAAZC,Q,kDAmCJ,WAAY7B,GAAoB,IAAD,8BAC3B,cAAMA,IAFV8B,wBAA0B,IAAIC,MACC,EAqB/BC,QAAU,SAACC,GAEP,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzB,EAAKC,SAAL,2BAAkB,EAAKC,OAAvB,IAA8BC,KAAMN,KAAQ,WACxCE,EAAQ,UAzBW,EA+B/BK,KAAO,WACH,OAAO,EAAKF,MAAMC,MAhCS,EAmC/BE,mBAAqB,SAACR,GAClB,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzB,EAAKC,SAAL,2BAAkB,EAAKC,OAAvB,IAA8BI,QAAST,KAAQ,WAC3CE,EAAQ,UAtCW,EA2C/BQ,gBAAkB,WACd,OAAO,EAAKL,MAAMI,SA5CS,EAgE/BE,YAAc,WACV,EAAKZ,SAAQ,IAjEc,EAoE/Ba,mBApE+B,uCAoEX,WAAOC,GAAP,SAAAC,EAAA,sEAEV,EAAKC,UAAUF,GAFL,2CApEW,wDAyE/BE,UAAW,SAACf,GACR,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzB,IAAMa,EAAU,EAAKX,MAAMhB,OAC3B2B,EAAQC,KAAKjB,GACb,EAAKI,SAAL,2BAAkB,EAAKC,OAAvB,IAA8BhB,OAAO2B,KAAU,kBAAId,EAAQ,UA7EpC,EAiF/BgB,uBAAyB,SAACC,GAAiB,IAAD,EAClC5B,EAAiB,GAIrB,OAHA,YAAKc,MAAMe,aAAaC,MAAK,SAAAC,GAAC,OAAEA,EAAEC,cAAgBJ,YAAlD,SAAuDK,cAAcC,KAAI,SAAAH,GACrE/B,EAAS0B,KAAK,CAACS,MAAMJ,EAAEzC,MAAOA,MAAMyC,EAAEH,QAEnC5B,GAtFoB,EAwF/BoC,cAAgB,SAACd,GAYP,IAAD,EATD,EAAKhB,wBAAwB+B,QAAO,SAAAN,GAAC,OAAEA,EAAEH,KAAON,EAAEgB,SAAOC,OAAS,EAElE,EAAKjC,wBAAwB4B,KAAI,SAACM,GAC3BA,EAAQZ,KAAON,EAAEgB,QAEhBE,EAAQlD,MAAQgC,EAAEhC,UAK1B,EAAKgB,wBAAwBoB,KAAK,CAACY,MAAK,UAAC,EAAKxB,MAAMe,aAAaC,MAAK,SAAAC,GAAC,OAAEA,EAAEC,cAAgBV,EAAEgB,gBAArD,aAAC,EAA4DA,MAAOhD,MAAMgC,EAAEhC,MAAOsC,GAAGN,EAAEgB,SArGzG,EA0G/BG,qBAAuB,SAACb,GACpB,OACE,mCACI,sBAAK9C,UAAU,0BAAmCD,MAAO,CAACc,MAAM,SAAhE,UACE,eAAC,IAAD,CAA4BC,SAAU,SAAC0B,GAAD,OAAK,EAAKoB,aAAa,CAACpD,MAAMgC,EAAGM,GAAGA,KAAMe,aAAa,KAAK9D,MAAO,CAAEc,MAAO,KAAlH,UACE,wBAAQL,MAAM,KAAd,oBAEI,EAAKd,MAAMoE,qBAAqBV,KAAI,SAACM,EAASK,GAC5C,OAAO,wBAAoBvD,MAAOkD,EAAQM,OAAnC,SAA6C,EAAKC,kBAAkBP,EAAQM,SAA/DD,QAJ5B,UAAgBjB,EAAhB,WAWA,cAAC,IAAD,CAAOhC,SAAU,SAAC0B,GAAS,EAAKc,cAAc,CAACE,MAAOV,EAAItC,MAAM,CAACgC,EAAE0B,OAAO1D,UAAgCW,YAAY,QAAQpB,MAAO,CAACa,QAAS,EAAKoB,MAAMe,aAAaQ,QAAO,SAAAN,GAAC,OAAEA,EAAEC,cAAgBJ,IAAsB,WAAfG,EAAEkB,UAAwC,WAAflB,EAAEkB,YAA4BlB,EAAEmB,cAAYX,OAAS,EAAG,SAAW,OAAQ5C,MAAM,UAAtT,UAA6FiC,EAA7F,WACA,cAAC,IAAD,CAAYhC,SAAU,SAAC0B,GAAS,EAAKc,cAAc,CAACE,MAAOV,EAAItC,MAAM,CAACgC,EAAE0B,OAAO1D,UAAW6D,OAAO,aAActE,MAAO,CAACa,QAAS,EAAKoB,MAAMe,aAAaQ,QAAO,SAAAN,GAAC,OAAEA,EAAEC,cAAgBJ,GAAqB,SAAfG,EAAEkB,WAAwBlB,EAAEmB,cAAaX,OAAS,EAAG,SAAW,OAAQ5C,MAAM,WACxQ,cAAC,EAAD,CAAkBC,SAAU,SAAC0B,GAAS,EAAKc,cAAc,CAACE,MAAOV,EAAItC,MAAMgC,EAAExB,UAAYX,KAAM,EAAK2B,MAAMe,aAAaQ,QAAO,SAAAN,GAAC,OAAEA,EAAEC,cAAgBJ,GAAMG,EAAEmB,cAAYX,OAAS,EAAgBvC,SAAU,EAAK2B,uBAAuBC,KAEtO,qBAAK/C,MAAO,CAACuE,eAAe,SAAUC,WAAW,UAAYvE,UAAU,OAAvE,SAEE,cAACwE,EAAA,EAAD,CAAexE,UAAU,eAAeF,QAAS,WAAK,EAAK2E,aAAa3B,UAlB9BA,MA7GzB,EAuI9Bc,aAAe,SAACpB,GAAS,IAAD,IACf2B,EAAQ,UAAG,EAAKzE,MAAMgF,kBAAkB1B,MAAK,SAAAC,GAAC,OAAEA,EAAEO,QAAUhB,EAAEhC,gBAAtD,aAAG,EAA2D2D,SACtEQ,EAAU,UAAE,EAAKjF,MAAMgF,kBAAkB1B,MAAK,SAAAC,GAAC,OAAEA,EAAEO,QAAUhB,EAAEhC,gBAArD,aAAE,EAA2DmE,WACvExB,EAAgB,EAAKzD,MAAMkF,gBAAgBrB,QAAO,SAAAN,GAAC,OAAEA,EAAEO,QAAUhB,EAAEhC,SAE1E,GAAsC,IAAnC,EAAKwB,MAAMe,aAAaU,OAEtB,EAAK1B,SAAL,2BAAkB,EAAKC,OAAvB,IAA8Be,aAAa,CAAC,CAExCG,YAAYV,EAAEM,GAAIqB,SAASA,GAAY,GAAIC,WAAYO,IAAc,EAAOxB,cAAcA,EAAeK,MAAMhB,EAAEhC,WAChH,WACD,IAAMqE,EAAY,EAAKxC,kBAAkBe,KAAI,SAAAM,GAKzC,OAJGA,EAAQZ,KAAON,EAAEM,KAEhBY,EAAQoB,QAAU,EAAKnB,qBAAqBnB,EAAEM,KAE3CY,KAEX,EAAKvB,mBAAmB0C,GAAWE,MAAK,WACpC,EAAKC,yBAGb,CACJ,IAAIC,EAAkB,EAAKjD,MAAMe,aAC9B,EAAKf,MAAMe,aAAaQ,QAAO,SAAAN,GAAC,OAAEA,EAAEC,cAAgBV,EAAEM,MAAIW,OAAS,EAElEwB,EAAgB7B,KAAI,SAAAM,GAQhB,OAPGA,EAAQR,cAAgBV,EAAEM,KAEzBY,EAAQS,SAAYA,GAAY,GAChCT,EAAQU,WAAaO,IAAc,EACnCjB,EAAQP,cAAgBA,EACxBO,EAAQF,MAAShB,EAAEhC,OAEhBkD,KAGXuB,EAAgBrC,KAAK,CAACM,YAAYV,EAAEM,GAAIqB,SAASA,GAAY,GAAIC,WAAWO,IAAc,EAAOxB,cAAcA,EAAgBK,MAAMhB,EAAEhC,QAEvI,EAAKuB,SAAL,2BAAkB,EAAKC,OAAvB,IAA8Be,aAAckC,KAAkB,WAC1D,IAAMJ,EAAY,EAAKxC,kBAAkBe,KAAI,SAAAM,GAKzC,OAJGA,EAAQZ,KAAON,EAAEM,KAEhBY,EAAQoB,QAAU,EAAKnB,qBAAqBnB,EAAEM,KAE3CY,KAEX,EAAKvB,mBAAmB0C,GAAWE,MAAK,WACpC,EAAKC,uBAvLU,EAgM7BE,cAhM6B,sBAgMd,oCAAAzC,EAAA,6DAEP0C,EAAc,EAAK9C,kBACnB+C,EAAqBD,EAAYE,MAAK,SAAC5C,EAAE6C,GAAH,OAAO7C,EAAEK,GAAKwC,EAAExC,MAExDyC,EAAa,EACdH,EAAmB3B,OAAS,IAE3B8B,EAAaH,EAAmBA,EAAmB3B,OAAS,GAAGX,GAAK,GAG7D,OAAXqC,QAAW,IAAXA,KAAavC,KAAK,CAACE,GAAGyC,EAAYT,QAAS,EAAKnB,qBAAqB4B,GAAaC,QAAO,IAX5E,SAYP,EAAKrD,mBAAmBgD,GAZjB,OAabM,QAAQC,IAAI,EAAKrD,mBACXsD,EAAYpF,IAAMqF,cAAc,MAAO,GAA3B,UAA+B,EAAKvD,yBAApC,aAA+B,EAAwBe,KAAI,SAACM,EAASK,GACnF,GAAGL,EAAQ8B,OAEP,OAAO,oCAAoB9B,EAAQoB,QAA5B,MAAUf,OAGzB8B,IAASC,OAAOH,EAAWI,SAASC,eAAe,qBApBtC,4CAhMc,EA0N7BvB,aA1N6B,uCA0Nd,WAAOwB,GAAP,mBAAAxD,EAAA,6DACPyD,EAAU,EAAK7D,kBAAkBe,KAAI,SAAAH,GAQvC,OAPGA,EAAEuC,QAEEvC,EAAEH,KAAOmD,IAERhD,EAAEuC,QAAS,GAGZvC,KATE,SAYP,EAAKd,mBAAmB+D,GAZjB,OAaPP,EAAYpF,IAAMqF,cAAc,MAAO,GAA3B,UAA+B,EAAKvD,yBAApC,aAA+B,EAAwBe,KAAI,SAACM,EAASK,GACnF,GAAGL,EAAQ8B,OAEP,OAAO,qCAAqB9B,EAAQoB,QAA7B,MAAUf,OAKzB8B,IAASC,OAAOH,EAAWI,SAASC,eAAe,qBArBtC,2CA1Nc,wDAmP7BG,iBAnP6B,sBAmPV,sBAAA1D,EAAA,6DAGjBoD,IAASC,OAAO,yCAAQC,SAASC,eAAe,qBAH/B,SAIX,EAAK7D,mBAAmB,IAJb,uBAKX,EAAKJ,SAAL,2BAAkB,EAAKC,OAAvB,IAA8Be,aAAc,MALjC,OAMjB,EAAKrD,MAAM0G,cAAc,GANR,2CAnPU,EA4P7BC,QAAU,WACL,EAAK3G,MAAM4G,MAEV,EAAK5G,MAAM4G,KAAK,CAACC,SAAU,EAAKlE,kBAAkBkB,QAAO,SAAAN,GAAC,OAAEA,EAAEuC,UAAQ/B,OAAQrB,QAAQ,EAAKZ,2BA/PpE,EAoQ7BgF,YAAc,WACT,EAAK9G,MAAM+G,UAEV,EAAK/G,MAAM+G,YAvQY,EA2Q7BzB,aAAe,WAAK,IAAD,EACXW,EAAYpF,IAAMqF,cAAc,MAAO,GAA3B,UAA+B,EAAKvD,yBAApC,aAA+B,EAAwBe,KAAI,SAACM,EAASK,GACnF,GAAGL,EAAQ8B,OAEP,OAAO,oCAAoB9B,EAAQoB,QAA5B,MAAUf,OAGzB8B,IAASC,OAAOH,EAAWI,SAASC,eAAe,sBAlRxB,EAqR7B/B,kBAAoB,SAACyC,GACjB,GAAGA,GAEIA,EAAMjD,OAAS,EAIhB,OAFoBiD,EAAMC,cAAc,GACrBD,EAAME,OAAO,EAAEF,EAAMjD,OAAS,GAAGoD,qBAzR5D,EAAK7E,MAAQ,CACTC,KAAM,EAAKvC,MAAMuC,KACjBG,QAAU,GACVW,aAAc,GACd/B,OAAQ,CAAC,MANc,E,6FAU/B,WAAyB8F,GAAzB,SAAArE,EAAA,yDAIOqE,IAAcC,KAAKrH,MAJ1B,uBAMQ+F,QAAQC,IAAI,SACZD,QAAQC,IAAIqB,KAAKrH,MAAMuC,MAP/B,SAQc8E,KAAKrF,QAAQqF,KAAKrH,MAAMuC,MARtC,gD,2EAsCA,WAEI,OACI,eAAC,IAAD,CAAOlC,MAAO,CAACiH,OAAO,UAAWnG,MAAM,QAAQoG,MAAM,UAAUC,QAASH,KAAK/E,MAAMC,KAAMqE,KAAMS,KAAKV,QAASc,OAAO,iBAAiBV,SAAUM,KAAKP,YAApJ,UACA,sBAAKxG,UAAU,yBAAf,UACG,cAAC,EAAD,CAAUH,MAAM,QAAQK,KAAK,UAAUP,KAAK,SAASI,MAAO,CAACa,QAASmG,KAAK1E,kBAAkBkB,QAAO,SAAAN,GAAC,OAAEA,EAAEuC,UAAQ/B,OAAS,EAAG,SAAU,QAAU3D,QAASiH,KAAKZ,iBAAmBlG,KAAM,cAACmH,EAAA,EAAD,MACxL,cAAC,EAAD,CAAUvH,MAAM,QAAQK,KAAK,iBAAiBP,KAAK,UAAUG,QAASiH,KAAK7B,cAAejF,KAAM,cAACoH,EAAA,EAAD,SAEnG,oCACC,qBAAKvE,GAAG,mBAAmB9C,UAAU,4BAA6BD,MAAO,CAACuH,UAAU,SAAUC,UAAU,kB,GA5DhFhH,IAAMiH,Y,iBCA5BC,EA5BQ,SAAC/H,GACpB,MAA6BU,mBAASV,EAAMwH,SAA5C,mBAAOA,EAAP,KAAgBQ,EAAhB,KAEIhH,qBAAU,WACNgH,EAAWhI,EAAMwH,WAClB,CAACxH,EAAMwH,UAgBV,OAAQ,mCACR,cAAC,IAAD,CAAQD,MAAOvH,EAAMiI,OAAS9G,MAAOnB,EAAMmB,MAAOqG,QAASA,EAASZ,KAdvD,WACTb,QAAQC,IACJ,YAEJhG,EAAM4G,QAUuEG,SAPhE,WACbhB,QAAQC,IACJ,cAEJhG,EAAM+G,YAGV,SACS/G,EAAMkI,aCjBfC,EAAYC,IAAZD,QAidOE,EA9aI,SAACrI,GAAyB,IAAD,IAC1C,EAAwBU,oBAAS,GAAjC,mBAAO6B,EAAP,KAAaP,EAAb,KACA,EAA0BtB,mBAAS,GAAnC,mBAAO4H,EAAP,KAAcC,EAAd,KACA,EAAgD7H,oBAAS,GAAzD,mBAAO8H,EAAP,KAAyBC,EAAzB,KACA,EAA8C/H,oBAAS,GAAvD,mBAAOgI,EAAP,KAAwBC,EAAxB,KACA,EAA4CjI,mBAASV,EAAM4I,cAA3D,mBAAOC,EAAP,KAAuBC,EAAvB,KACA,EAAyCpI,mBAASV,EAAM+I,SAAxD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAoCvI,mBAASV,EAAMkJ,WAAnD,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAkC1I,mBAASV,EAAMqJ,MAAjD,qBAAOC,GAAP,MAAkBC,GAAlB,MACA,GAAsD7I,mBAAS,IAA/D,qBAAO8I,GAAP,MAA+BC,GAA/B,MACIC,GAAgB,IAAIC,KAAKC,MAASC,SAAS,GAAI,QAAQC,UACvDC,GAAc,IAAIJ,KAAKC,MAASE,UAWpC9I,qBAAU,WACHhB,EAAMgK,QAEPhK,EAAMgK,OAAO,CACXN,cAAgBA,GAChBK,YAAcA,GACdE,iBAAmBT,QAK3BxI,qBAAU,WACRoI,EAAcpJ,EAAMkJ,aACnB,CAAClJ,EAAMkJ,YAEVlI,qBAAU,WACRuI,GAAavJ,EAAMqJ,QAClB,CAACrJ,EAAMqJ,OACV,IAAMa,GAAkB,SAACnB,GACvB,MAAyB,UAAtB/I,EAAMmK,YAEApB,EAAQrF,KAAI,SAACM,EAASK,GAC3B,GAAGL,EAAQoG,MAAMvG,QAAO,SAACN,GAAD,OAASA,EAAE5C,QAAMoD,OAAS,EAEhD,OACE,mCACE,cAAC,IAAD,CAAyBwD,MAAOvD,EAAQqG,YAAxC,SACGrG,EAAQoG,MAAM1G,KAAI,SAAC4G,EAAoBC,GACtC,IAAInE,OAASoE,EACT7J,EAAO2J,EAAe3J,KAK1B,GAJG2J,EAAelE,SAEhBA,EAASkE,EAAelE,QAEvBzF,EAED,OAAQ,mCACN,cAAC,IAAD,CAAU4G,MAAO+C,EAAe/C,MAAOkD,UAAWH,EAAeG,UAC/DtJ,MAAOmJ,EAAenJ,MAAOiF,OAAQA,GAD0CkE,EAAeI,WAXtFrG,QA2BnBrE,EAAM+I,QAAQrF,KAAI,SAACM,EAAaK,GACrC,OAAQ,mCACN,cAAC,IAAD,CAAUkD,MAAOvD,EAAQuD,MAAOkD,UAAWzG,EAAQyG,UACjDtJ,MAAO6C,EAAQ7C,MAAOiF,OAAQpC,GADmCA,EAAQ0G,WAgH3EC,GAAsB,SAAC5B,EAAe6B,GAC1C,GAAyB,UAAtB5K,EAAMmK,YACT,CACI,IAAMU,EAAOC,GAAgB/B,GAG7B,GAAG8B,EAGD,OAAS,mCACP,qBAAKvK,UAAU,WAAWD,MAAO,CAACuE,eAAe,gBAAjD,SAGMmE,EAAQrF,KAAI,SAACM,EAAaK,GACtB,GAAkC,KAA/BL,EAAQqG,YAAYU,OAIrB,OAFAhF,QAAQC,IAAI,QACZD,QAAQC,IAAI6E,EAAKxG,GAAO2G,UAChB,mCAEN,cAAC,IAAD,CACAC,QAAS,SAACC,GAAD,OAnEhBpI,EAmEwC,CAACqI,KAAKD,EAAaE,iBAAiBpH,EAAQqG,YAAatB,QAASA,EAASsC,KAAKT,GAlEvI7E,QAAQC,IAAI,kCACZD,QAAQC,IAAIlD,QACa,UAAtB9C,EAAMmK,cAELrH,EAAEiG,QAAQrF,KAAI,SAACH,GAEVA,EAAE8G,YAAYiB,gBAAkBxI,EAAEsI,iBAAiBE,eAElD/H,EAAE6G,MAAMmB,SAAQ,SAACnG,EAAaf,GAC5B,GAAGvB,EAAEqI,KAAKpH,OAAS,EACnB,CACE,IAAIyH,GAAe,EACnB1I,EAAEqI,KAAKI,SAAQ,SAACE,GACXA,IAAU,YAAUpH,KAErBmH,GAAe,MAKjBpG,EAAQzE,OAFP6K,OAOHpG,EAAQzE,MAAO,QAQX,UAAXmC,EAAEuI,MAEHtF,QAAQC,IAAIlD,EAAEiG,SACdE,EAAiBnG,EAAEiG,WAEnBhD,QAAQC,IAAIlD,EAAEiG,SACdD,EAAkBhG,EAAEiG,YAxCZ,IAACjG,GAoEO4I,mBAAoBb,EAAKxG,GAAO2G,SAAStH,KAAI,SAACM,GAC5C,OAAOA,EAAQ0G,OAGjBiB,SAAU,CAACd,EAAKxG,IAChBuH,WAAS,GAFJvH,cAkBvByG,GAAkB,SAAC/B,GAEvB,IAAI8B,EAAO,IAAI9I,MACf,GAAyB,UAAtB/B,EAAMmK,YAWT,OATIpB,EAAQwC,SAAQ,SAACvH,EAAaK,GAE1B,IAAMwH,EAAe7H,EAAQoG,MAAM1G,KAAI,SAACoI,EAAiBC,GACvD,MAAO,CAACxE,MAAMuE,EAAYvE,MAAM+D,cAAeZ,IAAI,KAAD,OAAOqB,OAE3DlB,EAAK3H,KAAK,CAACqE,MAAOvD,EAAQqG,YAAYiB,cAAeZ,IAAI,IAAKM,SAASa,OAIxEhB,GAMHmB,GAAW,WACZhM,EAAMgM,WAEPjG,QAAQC,IAAIwD,IACZzD,QAAQC,IAAI,CACV0D,cAAgBA,GAChBK,YAAcA,GACdE,iBAAmBT,KAErBxJ,EAAMgM,SAAS,CACbtC,cAAgBA,GAChBK,YAAcA,GACdE,iBAAmBT,OAInByC,GAA6B,SAACnJ,GAElC4G,GAAgB5G,EAAEgH,UAGdoC,GAA2B,SAACpJ,GAEhCiH,GAAcjH,EAAEgH,UAoBlB,OACE,sBAAKzJ,MAAO,CAACuE,eAAe,MAAOzD,MAAM,OAAQgL,YAAY,QAAS7L,UAAU,OAAhF,UAEE,eAAC,IAAD,CAAM8L,iBAAiB,IAAIC,YAAY,QAAvC,UAEQ,cAAClE,EAAD,CAASmE,IAAI,cAAb,SACA,sBAAKhM,UAAU,eAAf,UAEA,sBAAKA,UAAU,gBAAgBD,MAAO,CAACuE,eAAe,gBAAiBC,WAAW,MAAO0H,aAAa,QAAtG,UAzBH,mCACH,sBAAKjM,UAAU,OAAOD,MAAO,CAAEwE,WAAW,OAA1C,UACI,sBAAKvE,UAAU,aAAaD,MAAO,CAACwE,WAAW,QAASD,eAAe,UAAvE,UACE,iDACA,cAAC,IAAD,CAAYD,OAAO,aAAavD,SAAU6K,GAA4BO,KAAK,gBAAiBrI,aAAcyF,MAASC,SAAS,GAAI,QAASxJ,MAAO,CAAEc,MAAM,cAE1J,sBAAKb,UAAU,aAAaD,MAAO,CAACwE,WAAW,QAAS4H,WAAW,QAAnE,UACA,+CACE,cAAC,IAAD,CAAY9H,OAAO,aAAavD,SAAU8K,GAA0BM,KAAK,cAAcrI,aAAcyF,MAAUvJ,MAAO,CAAEc,MAAM,cAEhI,cAAC,EAAD,CAAUhB,MAAM,QAAQC,QAAS4L,GAAU3L,MAAO,CAACa,QAAQ,GAAD,OAAKlB,EAAM0M,aAAc,SAAW,QAAUD,WAAW,QAAWjM,KAAK,SAASP,KAAK,SAASM,KAAM,cAACoM,EAAA,EAAD,WAmB5J,cAAC,IAAD,CAAOC,MAAOtE,EAAOuE,MAAM,UAA3B,SACE,cAAC,EAAD,CAAU1M,MAAM,QAAQE,MAAO,CAACa,QAAQ,GAAD,OAAKlB,EAAM0M,aAAc,SAAW,SAAatM,QA3NpF,WAClB2F,QAAQC,IAAI,SACZhE,GAAQ,IAyNqHxB,KAAK,UAAUP,KAAK,SAASM,KAAM,cAACuM,EAAA,EAAD,WAIpJ,cAAC,IAAD,CACExM,UAAU,UACVyM,YAAY,EACZ1M,MAAO,CAACc,MAAMnB,EAAMmB,MAAOoL,aAAa,QAExCS,WAAY7D,EALd,SAOIe,GAAgBrB,KAIpB,cAAC,IAAD,CACIvI,UAAU,+BAEVD,MAAO,CAACc,MAAMnB,EAAMmB,OACpB8L,OAAS,CAACC,EAAE,KACZC,WAAY,CAAEC,kBAnPR,SAACtK,GACvB,IAAM0D,EAAUxG,EAAMqN,cAAcvK,GACpC,OAAO,cAAC,IAAD,CAAOmK,OAAQ,CAACC,EAAE,KAAMF,WAAYxG,EAAQ6C,KAAM0D,YAAY,EAAOhE,QAASvC,EAAQuC,QAAtF,oBAkPSiE,WAAY1D,GANhB,SAQMY,GAAgBlB,KAGpB,sBAAK1I,UAAU,gBAAf,UACA,cAAC,EAAD,CAAUH,MAAM,QAAQE,MAAO,CAACa,QAAQ,GAAD,OAAKlB,EAAMsN,eAAgB,SAAW,SAAYlN,QAhNxF,WAEfqI,GAAoB,IA8MyGjI,KAAK,WAAWP,KAAK,UAAUM,KAAM,cAACgN,EAAA,EAAD,MACpJ,cAAC,EAAD,CAAUpN,MAAM,QAAQK,KAAK,cAAcP,KAAK,UAAUM,KAAM,cAACiN,EAAA,EAAD,MAChE,cAAC,EAAD,CAAUrN,MAAM,QAAQK,KAAK,WAAWJ,QA7MtC,WAChBuI,GAAmB,IA4MyD1I,KAAK,UAAUM,KAAM,cAACkN,EAAA,EAAD,aArCxD,KA0C/B,cAACtF,EAAD,CAASmE,IAAI,WAAb,SACA,qBAAKhM,UAAU,oBAAoBD,MAAO,CAACuE,eAAe,UAA1D,SACM,eAAC,IAAD,CAAOwH,iBAAiB,IAAIsB,UAAQ,EAApC,UAEE,cAACvF,EAAD,CAASmE,IAAI,QAAb,SACA,qBAAKhM,UAAU,OAAQD,MAAO,CAACc,MAAM,SAASyD,eAAe,SAAU0C,OAAO,SAA9E,SAEItH,EAAM2N,gBAAkB,cAAC,IAAD,CAAM9C,KAAI,UAAE7K,EAAM2N,uBAAR,aAAE,EAAuBC,QAAc,4CAHpD,KASzB,cAACzF,EAAD,CAASmE,IAAI,UAAb,SACA,qBAAKhM,UAAU,OAAQD,MAAO,CAACc,MAAM,SAASyD,eAAe,SAAU0C,OAAO,SAA9E,SAEItH,EAAM2N,gBAAkB,cAAC,IAAD,CAAM9C,KAAI,UAAE7K,EAAM2N,uBAAR,aAAE,EAAuBE,UAAgB,4CAHpD,WAbP,QA6BlC,qCACA,cAAC,EAAD,CAAS3I,gBAAiBlF,EAAM8N,qBAAuB1J,qBAAwBpE,EAAMoE,qBAAsBY,kBAAmBhF,EAAMgF,kBAAmBzC,KAAMA,EAAMwE,SA9PxJ,WACf/E,GAAQ,IA6PmL4E,KA7QhL,SAAC9D,GAEZd,GAAQ,GACRuG,EAASzF,EAAE+D,UACX4C,GAAoB3G,GAGjB9C,EAAM+N,iBAGP/N,EAAM+N,gBAAgBjL,IAmQ+K4D,cA1PnL,WACpB6B,EAAS,GACTvG,GAAQ,MAyPJ,cAAC,EAAD,CACCb,MAAO,IACPyF,KA/Oa,WAClB+B,GAAmB,IA+Od5B,SA5OiB,WACtB4B,GAAmB,IA4OdV,OAAQ,WACRC,QAAU,mCACV,8BACG,eAAC,IAAD,CAAMkE,iBAAiB,IAAIsB,UAAQ,EAAnC,UACI,cAACvF,EAAD,CAASmE,IAAI,QAAb,SAEG3B,GAAoB9B,EAAgB,YAFd,KAKzB,cAACV,EAAD,CAASmE,IAAI,QAAb,SAEG3B,GAAoB3B,EAAc,UAFZ,YAchCxB,QAASkB,IAGV,cAAC,EAAD,CACCvH,MAAO,IACPyF,KAvTmB,WACxBb,QAAQC,IAAI,sBACZyC,GAAoB,IAsTf1B,SAnTuB,WAC5B0B,GAAoB,IAmTfR,OAAQ,YACRC,QAAU,mCACP,sBAAK5H,UAAU,OAAOD,MAAO,CAACc,MAAM,OAAQyD,eAAe,gBAA3D,UACA,cAAC,EAAD,CAAUzE,MAAM,QAAQK,KAAK,QAAQP,KAAK,UAAUM,KAAM,cAACyN,EAAA,EAAD,MAC1D,cAAC,EAAD,CAAU7N,MAAM,QAAQK,KAAK,MAAMP,KAAK,UAAUM,KAAM,cAAC0N,EAAA,EAAD,WAK3DzG,QAASgB,W,kBCrdL,MAA0B,iC,oCCmBpB0F,G,kDAGpB,WAAYlO,GACX,uCACQA,G,0CAER,WAEE,OAAQ,qCACJ,sBAAKM,UAAU,mBAAf,UACE,qBAAK6N,IAAMC,EAAQjN,MAAM,QAAQmG,OAAO,SACxC,0BAAShH,UAAU,sBAAnB,UACM,sBAAKD,MAAO,CAACiH,OAAO,OAAQ1C,eAAe,QAASyJ,UAAU,QAAS/N,UAAU,aAAjF,0CAEI,8CAEJ,qBAAKD,MAAO,CAACiH,OAAO,OAAQzC,WAAW,QAASwJ,UAAU,QAAS/N,UAAU,OAA7E,SACA,yBAASA,UAAU,WAAnB,SACI,8BACE,cAAC,IAAD,CAAWgO,QACP,eAAC,IAAD,WACA,cAAC,IAAKC,KAAN,UACE,mBAAGC,KAAK,IAAR,qBADa,KAGf,cAAC,IAAKD,KAAN,UACE,mBAAGC,KAAK,IAAR,oBADa,QAIjBC,QAAS,CAAC,SATZ,SAUA,mBAAGpO,MAAO,CAACwM,MAAM,QAAS6B,UAAU,SAAUC,OAAO,MAAOC,YAAY,QAAQC,YAAY,QAAUC,QAAQ,MAAOC,aAAa,OAAQ5N,MAAM,QAASb,UAAU,yBAAyBF,QAAS,SAAA0C,GAAC,OAAIA,EAAEkM,kBAA5M,oCASd,sBAAK1O,UAAU,iBAAf,UACE,cAAC,SAAD,CAAY2O,WAAa,YAAcC,iBAAmB,kBAA1D,SACI,qBAAK9L,GAAG,aAAa/C,MAAO,CAACa,QAAQ,OAAQiO,cAAc,UAA3D,SACE,cAAC,IAAD,CACE9O,MAAO,CAAEc,MAAO,IAAM0N,YAAY,SAClCO,oBAAqB,CAAC,KACtBC,gBAAiB,CAAC,QAClBpO,KAAK,SAJP,SAOQoG,KAAKrH,MAAMoK,MAAM1G,KAAI,SAACM,EAASZ,GAC7B,OACE,cAAC,KAAD,CAAS9C,UAAU,UAAoBC,KAAMyD,EAAQzD,KAAMgH,MAAOvD,EAAQsL,OAA1E,SAEItL,EAAQoG,MAAM1G,KAAI,SAACoI,EAAayD,GAC9B,OACE,cAAC,IAAKhB,KAAN,UAAqCzC,EAAYwD,QAAjD,UAAoBC,EAApB,YAA8BnM,QAJHA,YAgBrD,qBAAK9C,UAAU,uBAAf,SACW+G,KAAKrH,MAAMwP,kBAGxB,qBAAKnP,MAAO,CAACgO,UAAU,QAAvB,SACKhH,KAAKrH,MAAMgL,kB,GAxEYnK,IAAMiH,W,SC2C3B2H,GA3DF,CACT,CACIH,OAAO,oBACP/O,KAAM,cAAC,KAAD,IACN6J,MAAO,CACH,CACIkF,OAAO,iBAEX,CACIA,OAAO,cAEX,CACIA,OAAO,WAEX,CACIA,OAAO,qBAEX,CACIA,OAAO,0BAIpB,CACKA,OAAO,YACP/O,KAAM,cAAC,KAAD,IACN6J,MAAO,CACH,CACIkF,OAAO,qBAInB,CACIA,OAAO,WACP/O,KAAM,cAAC,KAAD,IACN6J,MAAO,CACH,CACIkF,OAAO,WAEX,CACIA,OAAO,aAGpB,CACIA,OAAO,YACP/O,KAAM,cAAC,KAAD,IACN6J,MAAO,CACH,CACIkF,OAAO,YACX,CACIA,OAAO,WAGnB,CACIA,OAAO,kBACP/O,KAAM,cAAC,KAAD,IACN6J,MAAO,CAAC,CAACkF,OAAO,WAAY,CAACA,OAAO,cCmC5BxB,GA7Fc,CAC3B,CACE1K,GAAI,IACJU,MAAO,UACPhD,MAAO,UAET,CACEsC,GAAI,IACJU,MAAO,UACPhD,MAAO,YAET,CACEsC,GAAI,IACJU,MAAO,SACPhD,MAAO,SAET,CACEsC,GAAI,IACJU,MAAO,SACPhD,MAAO,UAET,CACEsC,GAAI,IACJU,MAAO,SACPhD,MAAO,aAET,CACEsC,GAAI,IACJU,MAAO,kBACPhD,MAAO,aAET,CACEsC,GAAI,IACJU,MAAO,kBACPhD,MAAO,UAET,CACEsC,GAAI,IACJU,MAAO,QACPhD,MAAO,UAET,CACEsC,GAAI,IACJU,MAAO,QACPhD,MAAO,UAET,CACEsC,GAAI,KACJU,MAAO,WACPhD,MAAO,YAET,CACEsC,GAAI,KACJU,MAAO,WACPhD,MAAO,YAET,CACEsC,GAAI,KACJU,MAAO,UACPhD,MAAO,YAET,CACEsC,GAAI,KACJU,MAAO,UACPhD,MAAO,YAET,CACEsC,GAAI,KACJU,MAAO,eACPhD,MAAO,KAET,CACEsC,GAAI,KACJU,MAAO,eACPhD,MAAO,KAET,CACEsC,GAAI,KACJU,MAAO,kBACPhD,MAAO,KAET,CACEsC,GAAI,KACJU,MAAO,kBACPhD,MAAO,KAET,CACEsC,GAAI,KACJU,MAAO,kBACPhD,MAAO,MCxCM4O,GAjDS,CACtB,CACE5L,MAAQ,UACRW,SAAW,SACXQ,YAAY,GAGd,CACEnB,MAAQ,SACRW,SAAW,SACXQ,YAAY,GAEd,CACEnB,MAAQ,kBACRW,SAAW,SACXQ,YAAY,GAEd,CACEnB,MAAQ,QACRW,SAAW,SACXQ,YAAY,GAEd,CACEnB,MAAQ,WACRW,SAAW,SACXQ,YAAY,GAEd,CACEnB,MAAQ,UACRW,SAAW,SACXQ,YAAY,GAEd,CACEnB,MAAQ,eACRW,SAAW,SACXQ,YAAY,GAEd,CACEnB,MAAQ,kBACRW,SAAW,SACXQ,YAAY,GAEd,CACEnB,MAAQ,QACRW,SAAW,SACXQ,YAAY,ICZH0K,GAjCQ,CACnB,CACIrL,OAAO,WAEX,CACIA,OAAO,UAEX,CACIA,OAAO,mBAEX,CACIA,OAAO,SAEX,CACIA,OAAO,YAEX,CACIA,OAAO,WAEX,CACIA,OAAO,kBAEX,CACIA,OAAO,gBAEX,CACIA,OAAO,mBAEX,CACIA,OAAO,UCsXAsL,OA9Xf,WAsME,IArMA,IAAMH,EAAsBI,GAC5B,EAA0CnP,mBAASqB,SAAnD,mBACA,GADA,UAC0CrB,mBAASqB,UAAnD,mBACA,GADA,UACwDrB,mBAASqB,UAAjE,mBAiMIsH,GAjMJ,UAiMW,IAAItH,OACPiC,EAAU,EAAGA,EAAQ,GAAIA,IAE/BqF,EAAKnG,KAAK,CACRwH,IAAK1G,EAAQ,EACb8L,QAAU9L,EAAS,GAAG+L,WACtBC,YAAa,eACbC,SAAU,CAACC,OAAO,KAAMC,MAAQ,KAAMC,KAAK,MAC3CC,OAAQ,CAACH,OAAO,MAAOC,MAAQ,IAAKC,KAAK,OACzCE,UAAW,CAACJ,OAAO,KAAMC,MAAQ,IAAKC,KAAK,SAG/C,IA2FMG,EAA4B,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAG,GAAI,IAqB9E,OACI,mCACE,cAAC,GAAD,CAAQnG,MAAOqF,EAAMD,aAAa,6BAAlC,SACE,qBAAKlP,UAAU,cAAcD,MAAO,CAACuE,eAAe,UAApD,SACE,cAAC,EAAD,CACAoH,SAhBO,SAAClJ,GAChBiD,QAAQC,IAAIlD,IAgBJwK,gBAAgB,EAChBZ,cAAc,EACdW,cAxHY,SAACvK,GAErBiD,QAAQC,IAAIlD,GAoEZ,IAnEA,IAkEIuG,EAAO,IAAItH,MACPiC,EAAU,EAAGA,EAAQ,GAAIA,IAE/BqF,EAAKnG,KAAK,CACRwH,IAAK1G,EAAQ,EACb8L,QAAU9L,EAAS,GAAG+L,WACtBC,YAAa,cACbC,SAAU,CAACC,OAAO,KAAMC,MAAQ,IAAKC,KAAK,OAC1CC,OAAQ,CAACH,OAAO,MAAOC,MAAQ,IAAKC,KAAK,OACzCE,UAAW,CAACJ,OAAO,MAAOC,MAAQ,IAAKC,KAAK,SAGhD,MAAO,CAACrH,QA9Ee,CACnB,CACE0B,UAAW,WACXC,IAAI,WACJnD,MAAO,UACPpG,MAAO,IACPiF,OAAQ,SAACoK,GAAD,OAAiBA,EAAON,SAElC,CACEzF,UAAW,WACXC,IAAI,WACJnD,MAAO,SACPpG,MAAO,IACPiF,OAAQ,SAACoK,GAAD,OAAiBA,EAAOL,QAElC,CACE1F,UAAW,WACXC,IAAI,WACJnD,MAAO,OACPpG,MAAO,IACPiF,OAAQ,SAACoK,GAAD,OAAiBA,EAAOJ,OAElC,CACE3F,UAAW,SACXC,IAAI,SACJnD,MAAO,UACPpG,MAAO,IACPiF,OAAQ,SAACoK,GAAD,OAAiBA,EAAON,SAElC,CACEzF,UAAW,SACXC,IAAI,SACJnD,MAAO,SACPpG,MAAO,IACPiF,OAAQ,SAACoK,GAAD,OAAiBA,EAAOL,QAElC,CACE1F,UAAW,SACXC,IAAI,SACJnD,MAAO,OACPpG,MAAO,IACPiF,OAAQ,SAACoK,GAAD,OAAiBA,EAAOJ,OAElC,CACE3F,UAAW,YACXC,IAAI,YACJnD,MAAO,UACPpG,MAAO,IACPiF,OAAQ,SAACoK,GAAD,OAAiBA,EAAON,SAElC,CACEzF,UAAW,YACXC,IAAI,YACJnD,MAAO,SACPpG,MAAO,IACPiF,OAAQ,SAACoK,GAAD,OAAiBA,EAAOL,QAElC,CACE1F,UAAW,YACXC,IAAI,YACJnD,MAAO,OACPpG,MAAO,IACPiF,OAAQ,SAACoK,GAAD,OAAiBA,EAAOJ,QAgBZ/G,KAAMA,IAwCxB/B,OAAQ,IACRyB,QA1O4B,CACpC,CACEsB,YAAa,GACbD,MAAQ,CAAC,CACPK,UAAW,SACXC,IAAI,SACJnD,MAAO,SACP5G,MAAK,EACLQ,MAAO,KAET,CACEsJ,UAAW,cACXC,IAAI,cACJnD,MAAO,cACP5G,MAAK,EACLQ,MAAO,OAIX,CACAkJ,YAAY,WACZD,MAAO,CACH,CACEK,UAAW,WACXC,IAAI,WACJnD,MAAO,UACP5G,MAAK,EACLQ,MAAO,IACPiF,OAAQ,SAACoK,GAAD,OAAiBA,EAAON,SAElC,CACEzF,UAAW,WACXC,IAAI,WACJnD,MAAO,SACP5G,MAAK,EACLQ,MAAO,IACPiF,OAAQ,SAACoK,GAAD,OAAiBA,EAAOL,QAElC,CACE1F,UAAW,WACXC,IAAI,WACJnD,MAAO,OACP5G,MAAK,EACLQ,MAAO,IACPiF,OAAQ,SAACoK,GAAD,OAAiBA,EAAOJ,SAItC,CACA/F,YAAY,SACZD,MAAO,CACL,CACEK,UAAW,SACXC,IAAI,SACJnD,MAAO,UACP5G,MAAK,EACLQ,MAAO,IACPiF,OAAQ,SAACoK,GAAD,OAAiBA,EAAON,SAElC,CACEzF,UAAW,SACXC,IAAI,SACJnD,MAAO,SACP5G,MAAK,EACLQ,MAAO,IACPiF,OAAQ,SAACoK,GAAD,OAAiBA,EAAOL,QAElC,CACE1F,UAAW,SACXC,IAAI,SACJnD,MAAO,OACP5G,MAAK,EACLQ,MAAO,IACPiF,OAAQ,SAACoK,GAAD,OAAiBA,EAAOJ,SAIpC,CACE/F,YAAY,YACZD,MAAO,CACL,CACEK,UAAW,YACXC,IAAI,YACJnD,MAAO,SACP5G,MAAK,EACLQ,MAAO,IACPiF,OAAQ,SAACoK,GAAD,OAAiBA,EAAOL,QAElC,CACE1F,UAAW,SACXC,IAAI,SACJnD,MAAO,OACP5G,MAAK,EACLQ,MAAO,IACPiF,OAAQ,SAACoK,GAAD,OAAiBA,EAAOJ,UA6I9B/G,KAAMA,EACNW,OAnBK,SAAClH,KAoBN8F,aAzUmC,CAC3C,CACEyB,YAAa,GACbD,MAAQ,CAAC,CACPK,UAAW,SACXC,IAAI,SACJ/J,MAAK,EACL4G,MAAO,GACPpG,MAAO,OAIX,CACAkJ,YAAY,WACZD,MAAO,CACH,CACEK,UAAW,WACXC,IAAI,WACJnD,MAAO,UACPpG,MAAO,IACPR,MAAK,EACLyF,OAAQ,SAACoK,GAAD,OAAiBA,EAAON,SAElC,CACEzF,UAAW,WACXC,IAAI,WACJnD,MAAO,SACP5G,MAAK,EACLQ,MAAO,IACPiF,OAAQ,SAACoK,GAAD,OAAiBA,EAAOL,QAElC,CACE1F,UAAW,WACXC,IAAI,WACJnD,MAAO,OACP5G,MAAK,EACLQ,MAAO,IACPiF,OAAQ,SAACoK,GAAD,OAAiBA,EAAOJ,SAItC,CACA/F,YAAY,SACZD,MAAO,CACL,CACEK,UAAW,SACXC,IAAI,SACJnD,MAAO,UACP5G,MAAK,EACLQ,MAAO,IACPiF,OAAQ,SAACoK,GAAD,OAAiBA,EAAON,SAElC,CACEzF,UAAW,SACXC,IAAI,SACJnD,MAAO,SACP5G,MAAK,EACLQ,MAAO,IACPiF,OAAQ,SAACoK,GAAD,OAAiBA,EAAOL,QAElC,CACE1F,UAAW,SACXC,IAAI,SACJnD,MAAO,OACP5G,MAAK,EACLQ,MAAO,IACPiF,OAAQ,SAACoK,GAAD,OAAiBA,EAAOJ,SAIpC,CACE/F,YAAY,YACZD,MAAO,CACL,CACEK,UAAW,YACXC,IAAI,YACJnD,MAAO,SACP5G,MAAK,EACLQ,MAAO,IACPiF,OAAQ,SAACoK,GAAD,OAAiBA,EAAOL,QAElC,CACE1F,UAAW,SACXC,IAAI,SACJnD,MAAO,OACP5G,MAAK,EACLQ,MAAO,IACPiF,OAAQ,SAACoK,GAAD,OAAiBA,EAAOJ,UAmP9BlH,UAAW,CAAC,CAEV4G,OAAS,EACT7H,OAAO,QACP+H,YAAa,cACbC,SAAU,CAACC,OAAO,OAAQC,MAAQ,IAAKC,KAAK,QAC5CC,OAAQ,CAACH,OAAO,IAAQC,MAAQ,KAAMC,KAAK,OAC3CE,UAAW,CAACJ,OAAO,OAAQC,MAAQ,KAAMC,KAAK,SAEhDjP,MAAO,KACPgJ,YAAY,QACZ2D,qBAAwBA,GACxB1J,qBAAyBuL,GACzB3K,kBAAqB0K,GACrB3B,gBAxDa,SAACjL,GACtBiD,QAAQC,IAAI,iBACZD,QAAQC,IAAIlD,IAuDJ6K,gBAAiB,CACjBE,QAAQ,CACN4C,OAnDM,WAEhB,IADA,IAAIjK,EAAgB,GACZkK,EAAE,EAAEA,EAAE,GAAIA,IAEhBlK,EAAQtD,KAAKwN,GAGf,OAAOlK,EA4CWmK,GACRC,SAAU,CAAC,CACTjN,MAAO,UACPkH,KAAM0F,EACNM,MAAM,EACNhC,YAAa,oBACbiC,QAAS,MAIblD,MAAM,CACJ6C,OAhEQ,CAAC,QAAQ,UAAW,QAAS,QAAS,OAAQ,QAAS,QAAS,SAAU,aAAc,YAAa,aAiE7GG,SAAU,CAAC,CACTjN,MAAO,QACPkH,KAAM0F,EACNM,MAAM,EACNhC,YAAa,oBACbiC,QAAS,gBCxXVC,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqB5L,MAAK,YAAkD,IAA/C6L,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHd7K,IAASC,OACP,cAAC,IAAMmL,WAAP,UACE,cAAC,GAAD,MAEFlL,SAASC,eAAe,SAM1ByK,O","file":"static/js/main.4da6478c.chunk.js","sourcesContent":["import { Button } from 'antd';\r\nimport { ButtonType } from 'antd/lib/button';\r\nimport React, { CSSProperties, useState } from 'react';\r\nimport './buttonBG.css'\r\ninterface ButtonBGProps\r\n{\r\n    \r\n    type : \"outline\" | \"normal\" \r\n    shape :\"round\" | \"circle\";\r\n    text:string;\r\n    icon?:any;\r\n    style?:CSSProperties;\r\n    onClick?: any;\r\n}\r\n\r\nconst ButtonBG = (props:ButtonBGProps)=>\r\n{\r\n    let type:ButtonType = \"primary\"\r\n    let classe = \"normal\"\r\n    switch(props.type)\r\n    {\r\n        case 'outline':\r\n            \r\n            classe = \"outline\"\r\n            type = \"ghost\"\r\n            break;\r\n        case 'normal':\r\n            type = \"primary\"\r\n            classe = \"normal\"\r\n            break;     \r\n    }\r\n       \r\n    \r\n    const onClick = ()=>{\r\n        if(props.onClick)\r\n        {\r\n            props.onClick()\r\n        }        \r\n    }\r\n    return (<> \r\n        <Button shape={props.shape} onClick={onClick} style={props.style} className={classe} type={type} icon={props.icon}> {props.text}</Button>        \r\n    </>)\r\n}\r\n\r\nexport default ButtonBG","\r\nimport { Select, Space } from \"antd\";\r\nimport { SelectProps } from \"rc-select\";\r\nimport React, {useEffect, useState} from \"react\";\r\ninterface SelectMultipleBG {\r\n    show:boolean,\r\n    opciones:any[],\r\n    onChange?:any;\r\n}\r\nconst SelectMultipleBG = (props:SelectMultipleBG)=>{\r\n    \r\n    const [show, setShow] = useState(props.show)\r\n    const [value, setValue] = React.useState([]);\r\n    \r\n    useEffect(()=>{\r\n        setShow(props.show)\r\n    }, [props.show])\r\n    const onChangeValor = (newValue:any)=>{\r\n        setValue(newValue);\r\n        if(props.onChange)\r\n        {\r\n            props.onChange({values:newValue});\r\n            setValue(newValue);\r\n        }\r\n    }\r\n    return (<>\r\n            <Select mode=\"multiple\"  style={{ display:show?\"inline\":\"none\", width:\"240px\"}} value={value} onChange={onChangeValor}  options={props.opciones} placeholder=\"Valores\" maxTagCount=\"responsive\"  />\r\n    </>);\r\n}\r\n\r\nexport default SelectMultipleBG","import { CloseOutlined, DeleteOutlined, ExclamationCircleOutlined, PlusOutlined } from '@ant-design/icons'\r\nimport { DatePicker, Input, Modal, Select } from 'antd'\r\nimport  './modalBG.css'\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { catalogosCampos, catalogosFiltros, catalogosValues, informacionFiltros } from '../../interfaces/filtros'\r\nimport ButtonBG from '../buttonBG/buttonBG'\r\nimport SelectMultipleBG from '../selectMultipleBG/selectMultipleBG'\r\nconst  {confirm} =  Modal;\r\ninterface ModalBGProps {\r\n    open:boolean;\r\n    onOk  :any;\r\n    onCancel  :any;\r\n    onClearFiltro :any;\r\n    filtroCatalogoCampos: catalogosCampos[];\r\n    \r\n    filtroInformacion: informacionFiltros[]\r\n    catalogosValues : catalogosValues[]\r\n    \r\n}\r\n\r\ninterface ModalBGState {\r\n    open:boolean;\r\n    filtros : Array<any>\r\n    tipoCatalogo: Array<ModalBGStateCatalogo>\r\n    values: any;\r\n    \r\n}\r\n\r\ninterface ModalBGStateCatalogo{\r\n    idContainer:number;\r\n    campo:string;\r\n    tipoDato:string;\r\n    isCatalogo: boolean\r\n    catalogoValue:catalogosValues[]    \r\n\r\n}\r\n\r\n\r\n\r\nexport default class ModalBG extends React.Component<ModalBGProps,ModalBGState>\r\n{\r\n    retornoFiltrosAplicados = new Array<any>();\r\n    constructor(props:ModalBGProps){\r\n        super(props)\r\n        this.state = {\r\n            open: this.props.open,\r\n            filtros : [],\r\n            tipoCatalogo: [],            \r\n            values: [\"1\"]\r\n            \r\n        }\r\n    }\r\n    async componentDidUpdate(prevProps:ModalBGProps)\r\n    {\r\n        \r\n\r\n        if(prevProps !== this.props)\r\n        {\r\n            console.log(\"enrto\")\r\n            console.log(this.props.open)\r\n            await this.setOpen(this.props.open)\r\n        }\r\n    }\r\n    setOpen = (valor:boolean)=>\r\n    {\r\n        return new Promise((resolve, reject)=>{\r\n            this.setState({...this.state, open: valor}, ()=>{\r\n                resolve(0)\r\n            })\r\n        })\r\n        \r\n    }\r\n    \r\n    Open = ()=>{\r\n        return this.state.open\r\n    }\r\n\r\n    setElementosFiltro = (valor: any[])=>{\r\n        return new Promise((resolve, reject)=>{\r\n            this.setState({...this.state, filtros: valor}, ()=>{\r\n                resolve(0)\r\n            })\r\n        })\r\n    }\r\n\r\n    ElementosFiltro = ()=>{\r\n        return this.state.filtros;\r\n    }\r\n\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <Modal style={{height:\"1000px\"}} width=\"550px\" title=\"Filtros\" visible={this.state.open} onOk={this.okModal} okText=\"Guardar Filtro\" onCancel={this.cancelModla} >\r\n            <div className=\"flex row accionesModal\"  > \r\n               <ButtonBG shape=\"round\" text=\"Limpiar\" type=\"normal\" style={{display: this.ElementosFiltro().filter(x=>x.estado).length > 0? \"inline\": \"none\"}}  onClick={this.quitarFiltrosAll}  icon={<DeleteOutlined />} />\r\n               <ButtonBG shape=\"round\" text=\"Agregar Filtro\" type=\"outline\" onClick={this.agregarFiltro} icon={<PlusOutlined />} />\r\n            </div>\r\n            <div> </div>\r\n             <div id=\"contenedorFiltro\" className=\"flex row contenedorFiltro\"  style={{overflowY:\"scroll\", maxHeight:\"400px\"}} >\r\n                  \r\n             </div>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    onOpenModal = ()=>{\r\n        this.setOpen(true)\r\n    }\r\n    \r\n    onChangeInputValue =async (e:any)=>{\r\n\r\n        await this.setValues(e)\r\n        \r\n    }\r\n    setValues =(valor:any)=>{\r\n        return new Promise((resolve, reject)=>{\r\n            const valores = this.state.values;\r\n            valores.push(valor)\r\n            this.setState({...this.state, values:valores}, ()=>resolve(1))\r\n        })\r\n    }\r\n\r\n    optenerCatalogosValues = (id:any): any[]=>{\r\n        let opciones:any[] = []\r\n        this.state.tipoCatalogo.find(x=>x.idContainer === id)?.catalogoValue.map(x=>{\r\n            opciones.push({label:x.value, value:x.id})\r\n        })\r\n        return opciones\r\n    }\r\n    onChangeValue = (e:any)=>{\r\n        \r\n        \r\n        if( this.retornoFiltrosAplicados.filter(x=>x.id === e.campo).length > 0)\r\n        {\r\n            this.retornoFiltrosAplicados.map((recorre)=>{\r\n                if(recorre.id === e.campo)\r\n                {\r\n                    recorre.value = e.value\r\n                }\r\n                \r\n            })\r\n        }else{\r\n            this.retornoFiltrosAplicados.push({campo:this.state.tipoCatalogo.find(x=>x.idContainer === e.campo)?.campo, value:e.value, id:e.campo})\r\n        }\r\n        \r\n        \r\n    }\r\n    createElementoFiltro = (id:number)=>{        \r\n        return (\r\n          <> \r\n              <div className=\"flex row elementoFiltro\" key={id} style={{width:\"480px\"}}  >\r\n                <Select key={`${id}-campo`} onChange={(e)=>this.onChaneCampo({value:e, id:id})} defaultValue=\"-1\" style={{ width: 150 }} >\r\n                  <option value=\"-1\">Campos</option>  \r\n                  {\r\n                      this.props.filtroCatalogoCampos.map((recorre, index)=>{\r\n                        return <option key={index} value={recorre.cammpo}>{ this.transformarToItem(recorre.cammpo)}</option>                      \r\n                      })\r\n                  }                  \r\n                </Select>\r\n                \r\n                \r\n                  \r\n                <Input onChange={(e:any)=>{this.onChangeValue({campo: id, value:[e.target.value]})}} key={`${id}-valor`}  placeholder=\"Valor\" style={{display: this.state.tipoCatalogo.filter(x=>x.idContainer === id && (x.tipoDato === \"string\" || x.tipoDato === \"number\" )&&  !x.isCatalogo).length > 0? \"inline\" : \"none\", width:\"240px\" }} />\r\n                <DatePicker onChange={(e:any)=>{this.onChangeValue({campo: id, value:[e.target.value]})}} format=\"DD/mm/yyyy\"  style={{display: this.state.tipoCatalogo.filter(x=>x.idContainer === id && x.tipoDato === \"date\" && !x.isCatalogo ).length > 0? \"inline\" : \"none\", width:\"240px\" }} />\r\n                <SelectMultipleBG onChange={(e:any)=>{this.onChangeValue({campo: id, value:e.values})}}  show={this.state.tipoCatalogo.filter(x=>x.idContainer === id && x.isCatalogo).length > 0? true:false } opciones={this.optenerCatalogosValues(id)} />\r\n\r\n                <div style={{justifyContent:\"center\", alignItems:\"center\"}}  className=\"flex\" >\r\n                \r\n                  <CloseOutlined className=\"iconEliminar\" onClick={()=>{this.quitarFiltro(id)}} />\r\n                </div>\r\n                \r\n              </div>\r\n          </>\r\n        )\r\n      }\r\n \r\n     onChaneCampo = (e:any)=>{\r\n        const tipoDato = this.props.filtroInformacion.find(x=>x.campo === e.value)?.tipoDato\r\n        const esCatalogo =this.props.filtroInformacion.find(x=>x.campo === e.value)?.esCatalogo\r\n        const catalogoValue = this.props.catalogosValues.filter(x=>x.campo === e.value);\r\n        \r\n       if(this.state.tipoCatalogo.length === 0)\r\n       {\r\n            this.setState({...this.state, tipoCatalogo:[{\r\n                \r\n                idContainer:e.id, tipoDato:tipoDato || \"\", isCatalogo: esCatalogo || false, catalogoValue:catalogoValue, campo:e.value}\r\n            ] }, ()=>{\r\n                const newFiltro = this.ElementosFiltro().map(recorre =>{\r\n                    if(recorre.id === e.id)\r\n                    {\r\n                        recorre.element = this.createElementoFiltro(e.id)\r\n                    }     \r\n                    return recorre       \r\n                })\r\n                this.setElementosFiltro(newFiltro).then(()=>{\r\n                    this.renderFiltro()\r\n                })\r\n            })\r\n       }else{\r\n        let tipoCatalogoAux = this.state.tipoCatalogo\r\n        if(this.state.tipoCatalogo.filter(x=>x.idContainer === e.id).length > 0)\r\n        {\r\n            tipoCatalogoAux.map(recorre =>{\r\n                if(recorre.idContainer === e.id)\r\n                {\r\n                    recorre.tipoDato =  tipoDato || \"\"\r\n                    recorre.isCatalogo = esCatalogo || false\r\n                    recorre.catalogoValue = catalogoValue                    \r\n                    recorre.campo =  e.value\r\n                }\r\n                return recorre\r\n            })\r\n        }else{\r\n            tipoCatalogoAux.push({idContainer:e.id, tipoDato:tipoDato || \"\", isCatalogo:esCatalogo || false, catalogoValue:catalogoValue,  campo:e.value})\r\n        }\r\n            this.setState({...this.state, tipoCatalogo: tipoCatalogoAux}, ()=>{\r\n                const newFiltro = this.ElementosFiltro().map(recorre =>{\r\n                    if(recorre.id === e.id)\r\n                    {\r\n                        recorre.element = this.createElementoFiltro(e.id)\r\n                    }     \r\n                    return recorre       \r\n                })\r\n                this.setElementosFiltro(newFiltro).then(()=>{\r\n                    this.renderFiltro()\r\n                })\r\n            })\r\n            \r\n\r\n       }\r\n\r\n     }\r\n      \r\n      agregarFiltro =async ()=>{\r\n        \r\n        const oldElements = this.ElementosFiltro()\r\n        const elementosOrdenados = oldElements.sort((a,b)=>a.id - b.id)\r\n        \r\n        let idAsignada = 0\r\n        if(elementosOrdenados.length > 0)\r\n        {\r\n            idAsignada = elementosOrdenados[elementosOrdenados.length - 1].id + 1;\r\n        }\r\n        \r\n        oldElements?.push({id:idAsignada, element: this.createElementoFiltro(idAsignada), estado:true}, )\r\n        await this.setElementosFiltro(oldElements)     \r\n        console.log(this.ElementosFiltro())\r\n        const elementos = React.createElement(\"div\", {}, this.ElementosFiltro()?.map((recorre, index)=>{      \r\n            if(recorre.estado)\r\n            {\r\n                return <div key={index} > {recorre.element} </div>\r\n            }        \r\n        }))\r\n        ReactDOM.render(elementos, document.getElementById(\"contenedorFiltro\")) \r\n        \r\n      }\r\n    \r\n      \r\n    \r\n      quitarFiltro = async (idIngreso:number)=>{\r\n        const retorno = this.ElementosFiltro().map(x=>{\r\n            if(x.estado)\r\n            {\r\n                if(x.id === idIngreso)\r\n                {\r\n                    x.estado = false;\r\n                }\r\n            }            \r\n            return x;\r\n        })\r\n        \r\n        await this.setElementosFiltro(retorno)         \r\n        const elementos = React.createElement(\"div\", {}, this.ElementosFiltro()?.map((recorre, index)=>{   \r\n            if(recorre.estado)\r\n            { \r\n                return <div key={index} >  {recorre.element} </div>    \r\n            }\r\n            \r\n            \r\n            }))\r\n        ReactDOM.render(elementos, document.getElementById(\"contenedorFiltro\"))\r\n                 \r\n        \r\n      }\r\n      quitarFiltrosAll = async ()=>{\r\n        \r\n        \r\n        ReactDOM.render(<> </>, document.getElementById(\"contenedorFiltro\"))\r\n        await this.setElementosFiltro([])     \r\n        await this.setState({...this.state, tipoCatalogo: []})\r\n        this.props.onClearFiltro(0)      \r\n        \r\n      }\r\n      okModal = ()=>{\r\n        if(this.props.onOk)\r\n        {\r\n            this.props.onOk({longitud: this.ElementosFiltro().filter(x=>x.estado).length, filtros:this.retornoFiltrosAplicados})\r\n        }\r\n          \r\n      }\r\n\r\n      cancelModla = ()=>{\r\n        if(this.props.onCancel)\r\n        {\r\n            this.props.onCancel()\r\n        }\r\n      }\r\n\r\n      renderFiltro = ()=>{\r\n        const elementos = React.createElement(\"div\", {}, this.ElementosFiltro()?.map((recorre, index)=>{      \r\n            if(recorre.estado)\r\n            {\r\n                return <div key={index} > {recorre.element} </div>\r\n            }        \r\n        }))\r\n        ReactDOM.render(elementos, document.getElementById(\"contenedorFiltro\")) \r\n      }\r\n\r\n      transformarToItem = (input:string)=>{\r\n          if(input)\r\n          {\r\n              if(input.length > 0)\r\n              {\r\n                const primerLetra = input.toUpperCase()[0];                \r\n                const restoInput = input.substr(1,input.length - 1).toLocaleLowerCase();\r\n                return primerLetra +  restoInput\r\n              }\r\n            \r\n          }\r\n          \r\n\r\n      }\r\n}","import { Modal } from \"antd\";\r\nimport React, {useState, useEffect } from \"react\";\r\n\r\ninterface ModalContentBGProps\r\n{\r\n    titulo: string;\r\n    content:any;\r\n    visible:boolean;\r\n    onOk :any;\r\n    width:any;\r\n    onCancel:any;\r\n}\r\nconst ModalContentBG = (props:ModalContentBGProps)=>{\r\n    const [visible, setVisible] =useState(props.visible);\r\n\r\n        useEffect(()=>{\r\n            setVisible(props.visible)\r\n        }, [props.visible])\r\n\r\n\r\n        const onOk = ()=>{\r\n            console.log(\r\n                \"doy a ok\"\r\n            )\r\n            props.onOk()\r\n        }\r\n\r\n        const onCancel = ()=>{\r\n            console.log(\r\n                \"doy cancel\"\r\n            )\r\n            props.onCancel()\r\n        }   \r\n        return (<>                 \r\n        <Modal  title={props.titulo}  width={props.width} visible={visible} onOk={onOk}  onCancel={onCancel} >\r\n                {props.content}\r\n        </Modal>\r\n        </>)\r\n}\r\n\r\nexport default ModalContentBG","import React, { CSSProperties, useState, useEffect } from 'react';\r\nimport { DataGrid, GridColDef, GridCsvExportApi, GridExportCsvOptions, GridFilterItem, GridFilterModel, GridLinkOperator, GridToolbar, GridToolbarContainer, GridToolbarExport, GridToolbarFilterButton } from '@material-ui/data-grid';\r\nimport 'antd/dist/antd.css';\r\nimport './gridViewBG.css'\r\nimport {Line} from 'react-chartjs-2'\r\nimport { Badge, Dropdown, Modal, Space, Table, Select, Tabs, Tree, DatePicker, Checkbox } from 'antd';\r\nimport { CloseOutlined, DeleteOutlined, DownloadOutlined, DownOutlined, FileExcelOutlined, FileOutlined, FilePdfOutlined, FunnelPlotOutlined, PlusOutlined, ReloadOutlined, RotateRightOutlined, SearchOutlined, SelectOutlined } from '@ant-design/icons';\r\nimport { Button } from 'antd';\r\nimport ButtonBG from '../buttonBG/buttonBG';\r\nimport { ColumnsType } from 'antd/lib/table';\r\nimport ColumnGroup from 'rc-table/lib/sugar/ColumnGroup';\r\nimport Column from 'rc-table/lib/sugar/Column';\r\nimport ColumnasGrupo from '../../interfaces/columnasGrupos';\r\nimport ReactDOM from 'react-dom';\r\nimport ModalBG from '../modalBG/modalBG';\r\nimport { catalogosCampos, catalogosFiltros, catalogosValues, informacionFiltros } from '../../interfaces/filtros';\r\nimport moment from 'moment';\r\nimport ModalContentBG from '../modalContentBG/modalContentBG';\r\nconst { TabPane } = Tabs;\r\n\r\ninterface GridViewBGPropsDataSetGrafico{\r\n      labels: any[],\r\n      datasets: [{\r\n        label:string,\r\n        data:any[],\r\n        fill:boolean,\r\n        borderColor:string,\r\n        tension:number\r\n      }]\r\n    \r\n}\r\ninterface GridViewBGProps{\r\n    width:number;\r\n    height:number,\r\n    \r\n    columns: ColumnasGrupo[] | any[];\r\n    rows : Array<any>    \r\n    columnsTotal: ColumnasGrupo[] | any[];\r\n    rowsTotal : Array<any>    \r\n    onOpenDetalle : any;\r\n    buttonDownload?:boolean;\r\n    buttonFilter?:boolean;\r\n    tipoColumna: \"grupo\" | \"individual\"\r\n    filtroCatalogoCampos: catalogosCampos[];\r\n    onAplicarFiltro?:any;\r\n    filtroCatalogoValues : catalogosValues[]\r\n    filtroInformacion: informacionFiltros[];\r\n    onBuscar?:any;\r\n    onLoad?: any;\r\n    dataSetGraficos? : {mensual:GridViewBGPropsDataSetGrafico, anual:GridViewBGPropsDataSetGrafico}\r\n}\r\n\r\nlet validarRefencia = 0;\r\nconst GridViewBG = (props:GridViewBGProps)=>{\r\n  const [open, setOpen] = useState(false)\r\n  const [badge, setBadge] = useState(0)\r\n  const [openModalContent, setOpenModalContent] = useState(false)\r\n  const [openModalColumn, setOpenModalColumn] = useState(false)\r\n  const [columnsTotales, setColumnsTotales] = useState(props.columnsTotal)\r\n  const [columnsGrupo, setColumnsGrupos] = useState(props.columns)\r\n  const [rowTotales, setRowTotales] = useState(props.rowsTotal)\r\n  const [rowGrupos, setRowGrupos] = useState(props.rows)\r\n  const [filtrosAplicadosObjeto, setFiltrosAplicados] = useState({});\r\n  let fechaAnterior = new Date(moment().subtract(20, \"days\").toDate());\r\n  let fechaActual = new Date(moment().toDate());\r\n  const dataAnual = {\r\n    labels: [\"Enero\",\"Febrero\", \"Marzo\", \"Abril\", \"Mayo\", \"Junio\", \"Julio\", \"Agosto\", \"Septiembre\", \"Noviembre\", \"Diciembre\"],\r\n    datasets: [{\r\n      label: 'Grafico 1',\r\n      data: [65, 59, 80, 81, 56, 55, 40, 52, 48, 12,11, 80],\r\n      fill: false,\r\n      borderColor: 'rgb(75, 192, 192)',\r\n      tension: 0.1\r\n    }]\r\n  };\r\n  useEffect(()=>{\r\n      if(props.onLoad)\r\n      {\r\n        props.onLoad({\r\n          fechaAnterior : fechaAnterior,\r\n          fechaActual : fechaActual,\r\n          filtrosAplicados : filtrosAplicadosObjeto\r\n        });\r\n      }\r\n  })\r\n\r\n  useEffect(()=>{\r\n    setRowTotales(props.rowsTotal)\r\n  }, [props.rowsTotal])\r\n\r\n  useEffect(()=>{\r\n    setRowGrupos(props.rows)\r\n  }, [props.rows])\r\n  const getColumnsGroup = (columns:any[])=>{\r\n    if(props.tipoColumna === \"grupo\")\r\n    {\r\n      return columns.map((recorre, index) =>{\r\n        if(recorre.items.filter((x:any)=>x.show).length > 0)\r\n        {\r\n          return (\r\n            <>\r\n              <ColumnGroup key={index} title={recorre.tituloGrupo} >\r\n                {recorre.items.map((recorreChildre:any, indexChildren:any)=>{\r\n                  let render = undefined\r\n                  let show = recorreChildre.show;\r\n                  if(recorreChildre.render)\r\n                  {\r\n                    render = recorreChildre.render\r\n                  }\r\n                  if(show)\r\n                  {\r\n                    return (<> \r\n                      <Column   title={recorreChildre.title} dataIndex={recorreChildre.dataIndex} key={recorreChildre.key} \r\n                        width={recorreChildre.width} render={render}                            \r\n                      />\r\n                    </>)\r\n                  }\r\n                  \r\n                })\r\n                }\r\n                \r\n              </ColumnGroup>                   \r\n            </>\r\n          )\r\n        }\r\n       \r\n      })\r\n    }else{\r\n      return props.columns.map((recorre:any, index:any)=>{\r\n        return (<> \r\n          <Column   title={recorre.title} dataIndex={recorre.dataIndex} key={recorre.key} \r\n            width={recorre.width} render={recorre}                            \r\n          />\r\n        </>)\r\n      })\r\n    }\r\n    \r\n  }\r\n  const expandedRowRender = (e:any) => {\r\n      const retorno = props.onOpenDetalle(e)\r\n      return <Table scroll={{y:340}} dataSource={retorno.rows} pagination={false} columns={retorno.columns} >    </Table>;\r\n    };\r\n    const onOpenModal = ()=>{\r\n      console.log(\"entro\")\r\n      setOpen(true)\r\n      \r\n    }\r\n    const onOkModalDownload = ()=>{\r\n      console.log(\"actualizo el state\")\r\n      setOpenModalContent(false)\r\n\r\n    } \r\n    const onCancelModalDownload = ()=>{\r\n      setOpenModalContent(false)\r\n\r\n    }\r\n    const onOk = (e:any)=>\r\n    { \r\n      setOpen(false)\r\n      setBadge(e.longitud)\r\n      setFiltrosAplicados(e)\r\n      \r\n      \r\n      if(props.onAplicarFiltro)\r\n      {\r\n        \r\n        props.onAplicarFiltro(e);\r\n        \r\n      }\r\n    }\r\n\r\n    const onCancel = ()=>{\r\n      setOpen(false)\r\n    }\r\n\r\n    const onClearFiltro = ()=>{\r\n      setBadge(0)\r\n      setOpen(false)\r\n\r\n    }\r\n    const onDowload =()=>\r\n    {\r\n      setOpenModalContent(true)\r\n    }\r\n\r\n    const onColumnas =()=>{\r\n      setOpenModalColumn(true)\r\n    }\r\n\r\n    const onOkColumns = ()=>{\r\n      setOpenModalColumn(false)\r\n    }\r\n\r\n    const onCancelColumns = ()=>{\r\n      setOpenModalColumn(false)\r\n    }\r\n    const onCheked =(e:any)=>{\r\n      console.log(\"est es lo que retorna el check\")\r\n      console.log(e)\r\n      if(props.tipoColumna === \"grupo\")\r\n      { \r\n          e.columns.map((x:any)=>\r\n          {\r\n            if(x.tituloGrupo.toLowerCase() === e.columnGroupTitle.toLowerCase())\r\n            {\r\n                x.items.forEach((element:any, index:any) => {\r\n                  if(e.keys.length > 0)\r\n                  {\r\n                    let seleccionado = false;\r\n                    e.keys.forEach((elementKey:any) => {\r\n                      if(elementKey === `0-${index}`)\r\n                      {\r\n                        seleccionado = true\r\n                      }\r\n                    });\r\n                    if(seleccionado)\r\n                    {\r\n                      element.show = true\r\n                    }else{\r\n                      element.show = false;\r\n                    }\r\n                  }else{\r\n                    element.show = false\r\n                  }\r\n                    \r\n                });\r\n                \r\n            }                      \r\n          }\r\n          )\r\n          if(e.tipo === \"grupo\")\r\n          {\r\n            console.log(e.columns)\r\n            setColumnsGrupos(e.columns)\r\n          }else{\r\n            console.log(e.columns)\r\n            setColumnsTotales(e.columns)\r\n          }\r\n\r\n      }\r\n      \r\n    }\r\n    const obtenerTreeColumnas = (columns:any[], tipoGrid: \"totales\" | \"grupo\")=>{\r\n      if(props.tipoColumna === \"grupo\")\r\n      {\r\n          const data = obtenerTreeData(columns)\r\n          \r\n          \r\n          if(data)\r\n          {\r\n            \r\n            return  (<>          \r\n              <div className=\"flex row\" style={{justifyContent:\"space-around\"}} >\r\n                  {\r\n                    \r\n                    columns.map((recorre:any, index:any)=>{\r\n                        if(recorre.tituloGrupo.trim() !== \"\")\r\n                        {\r\n                          console.log(\"tree\")\r\n                          console.log(data[index].children)\r\n                          return (<> \r\n  \r\n                            <Tree \r\n                            onCheck={(checkedKeys)=>onCheked({keys:checkedKeys, columnGroupTitle:recorre.tituloGrupo, columns: columns, tipo:tipoGrid })}\r\n                            defaultCheckedKeys={data[index].children.map((recorre:any)=> {\r\n                              return recorre.key\r\n                            })}\r\n                            key={index}\r\n                            treeData={[data[index]]}                        \r\n                            checkable/>                      \r\n                            </>)\r\n                        }   \r\n                      \r\n                    })\r\n                  }\r\n                  \r\n  \r\n              </div>\r\n             </>)\r\n          }\r\n         \r\n      }\r\n        \r\n    }\r\n\r\n    const obtenerTreeData = (columns:any[])=>\r\n    { \r\n      let data = new Array<any>();\r\n      if(props.tipoColumna === \"grupo\" )\r\n      {\r\n          columns.forEach((recorre:any, index:any) =>{\r\n            \r\n              const childrenTree = recorre.items.map((recorreItem:any, indexItem:any)=>{\r\n                return {title:recorreItem.title.toLowerCase(), key: `0-${indexItem}` }\r\n              })\r\n              data.push({title: recorre.tituloGrupo.toLowerCase(), key:`0`, children:childrenTree} )\r\n            \r\n            \r\n          })\r\n      return data;\r\n      }\r\n      \r\n    }\r\n\r\n    \r\n    const onBuscar = ()=>{\r\n      if(props.onBuscar)\r\n      {\r\n        console.log(filtrosAplicadosObjeto)\r\n        console.log({\r\n          fechaAnterior : fechaAnterior,\r\n          fechaActual : fechaActual,\r\n          filtrosAplicados : filtrosAplicadosObjeto\r\n        })\r\n        props.onBuscar({\r\n          fechaAnterior : fechaAnterior,\r\n          fechaActual : fechaActual,\r\n          filtrosAplicados : filtrosAplicadosObjeto\r\n        });\r\n      }\r\n    }\r\n    const onChangeFechaFechaAnterior = (e:any)=>\r\n    {\r\n      fechaAnterior = e.toDate();\r\n      \r\n    }\r\n    const onChangeFechaFechaActual = (e:any)=>\r\n    {\r\n      fechaActual = e.toDate();\r\n    }\r\n    const fechas = ()=>{\r\n      return <>\r\n          <div className=\"flex\" style={{ alignItems:\"end\"}}  >\r\n              <div className=\"flex colum\" style={{alignItems:\"start\", justifyContent:\"center\"}} >\r\n                <div>Fecha Anterior</div>\r\n                <DatePicker format=\"DD/MM/yyyy\" onChange={onChangeFechaFechaAnterior} name=\"fechaAnterior\"  defaultValue={moment().subtract(20, \"days\")} style={{ width:\"200px\"}} />\r\n              </div>\r\n              <div className=\"flex colum\" style={{alignItems:\"start\", marginLeft:\"20px\"}}  >\r\n              <div>Fecha Actual</div>\r\n                <DatePicker format=\"DD/MM/yyyy\" onChange={onChangeFechaFechaActual} name=\"fechaActual\" defaultValue={moment()} style={{ width:\"200px\"}} />\r\n              </div>\r\n              <ButtonBG shape=\"round\" onClick={onBuscar} style={{display: `${props.buttonFilter? \"inline\" : \"none\"}`, marginLeft:\"20px\" }}  text=\"Buscar\" type=\"normal\" icon={<ReloadOutlined />} /> \r\n              \r\n          </div>\r\n       </> \r\n    }\r\n    \r\n    \r\n    return (\r\n      <div style={{justifyContent:\"end\", width:\"100%\", marginRight:\"30px\"}} className=\"flex\" >\r\n        \r\n        <Tabs defaultActiveKey=\"1\" tabPosition=\"right\" >\r\n                \r\n                <TabPane tab=\"Informacion\" key=\"1\">\r\n                <div className=\"tabContainer\"> \r\n                \r\n                <div className=\"acciones flex\" style={{justifyContent:\"space-between\", alignItems:\"end\", marginBottom:\"20px\"}}>          \r\n                  {\r\n                    fechas()\r\n                  }\r\n                  <Badge count={badge} color=\"#bc157c\" > \r\n                    <ButtonBG shape=\"round\" style={{display: `${props.buttonFilter? \"inline\" : \"none\"}` }}  onClick={onOpenModal}  text=\"Filtrar\" type=\"normal\" icon={<FunnelPlotOutlined />} /> \r\n                  </Badge>\r\n                  \r\n                </div>\r\n                  <Table\r\n                    className=\"totales\"\r\n                    pagination={false}\r\n                    style={{width:props.width, marginBottom:\"10px\"}}\r\n                                      \r\n                    dataSource={rowTotales}>\r\n                    {\r\n                      getColumnsGroup(columnsTotales)\r\n                    }\r\n                    \r\n                  </Table>  \r\n                  <Table\r\n                      className=\"components-table-demo-nested\"\r\n                      \r\n                      style={{width:props.width}}\r\n                      scroll ={{y:210}}            \r\n                      expandable={{ expandedRowRender }}\r\n                      dataSource={rowGrupos}>\r\n                      {\r\n                        getColumnsGroup(columnsGrupo)\r\n                      }                        \r\n                    </Table>\r\n                    <div className=\"flex acciones\" >\r\n                    <ButtonBG shape=\"round\" style={{display: `${props.buttonDownload? \"inline\" : \"none\"}` }} onClick={onDowload}   text=\"Exportar\" type=\"outline\" icon={<DownloadOutlined />} />           \r\n                    <ButtonBG shape=\"round\" text=\"Variaciones\" type=\"outline\" icon={<FileOutlined />} /> \r\n                    <ButtonBG shape=\"round\" text=\"Columnas\" onClick={onColumnas}  type=\"outline\" icon={<RotateRightOutlined />} /> \r\n                    </div>\r\n                </div>\r\n                </TabPane>\r\n              \r\n                <TabPane tab=\"Graficos\" key=\"3\">\r\n                <div className=\"tabContainer flex\" style={{justifyContent:\"center\"}}  >\r\n                      <Tabs  defaultActiveKey=\"0\" centered> \r\n\r\n                        <TabPane tab=\"Anual\" key=\"0\" >\r\n                        <div className=\"flex\"  style={{width:\"1000px\",justifyContent:\"center\", height:\"500px\"}}> \r\n                        {\r\n                            props.dataSetGraficos?  <Line data={props.dataSetGraficos?.anual}  /> :  <> </>\r\n                        }\r\n                          \r\n                        </div>\r\n                        </TabPane>\r\n\r\n                        <TabPane tab=\"Mensual\" key=\"1\" >\r\n                        <div className=\"flex\"  style={{width:\"1000px\",justifyContent:\"center\", height:\"500px\"}}> \r\n                        {\r\n                            props.dataSetGraficos?  <Line data={props.dataSetGraficos?.mensual}  /> :  <> </>\r\n                        }\r\n                        </div>\r\n                        </TabPane>\r\n\r\n                      </Tabs>\r\n                      \r\n                      \r\n                </div>\r\n                </TabPane>\r\n        </Tabs> \r\n      \r\n        {\r\n          <>\r\n          <ModalBG catalogosValues={props.filtroCatalogoValues}  filtroCatalogoCampos = {props.filtroCatalogoCampos} filtroInformacion={props.filtroInformacion} open={open} onCancel={onCancel} onOk={onOk} onClearFiltro={onClearFiltro}  />\r\n          <ModalContentBG \r\n           width={500}\r\n           onOk={onOkColumns} \r\n           onCancel={onCancelColumns} \r\n           titulo={'Columnas'} \r\n           content={ <> \r\n           <div  >\r\n              <Tabs defaultActiveKey=\"0\" centered >\r\n                  <TabPane tab=\"total\" key=\"0\">\r\n                  {\r\n                     obtenerTreeColumnas(columnsTotales, \"totales\")\r\n                  }\r\n                  </TabPane>\r\n                  <TabPane tab=\"grupo\" key=\"1\">\r\n                  {\r\n                     obtenerTreeColumnas(columnsGrupo, \"grupo\")\r\n                  }\r\n                  </TabPane>\r\n\r\n\r\n              </Tabs>\r\n           \r\n              \r\n           </div>\r\n            \r\n           \r\n           </> }\r\n           visible={openModalColumn}></ModalContentBG>\r\n\r\n           \r\n          <ModalContentBG \r\n           width={340}\r\n           onOk={onOkModalDownload} \r\n           onCancel={onCancelModalDownload} \r\n           titulo={'Descargar'} \r\n           content={ <> \r\n              <div className=\"flex\" style={{width:\"100%\", justifyContent:\"space-around\"}} >\r\n              <ButtonBG shape=\"round\" text=\"Excel\" type=\"outline\" icon={<FileExcelOutlined />} /> \r\n              <ButtonBG shape=\"round\" text=\"PDF\" type=\"outline\" icon={<FilePdfOutlined />} /> \r\n              </div>\r\n              \r\n\r\n           </> }\r\n           visible={openModalContent}></ModalContentBG>\r\n          </>\r\n          \r\n        }\r\n      </div>\r\n    );\r\n    \r\n    \r\n        \r\n\r\n  \r\n}\r\n\r\n\r\nexport default GridViewBG;\r\n","export default __webpack_public_path__ + \"static/media/logo.cf28da68.png\";","import React from 'react';\r\nimport './menuBG.css';\r\nimport { bubble as MenuBurger } from 'react-burger-menu'\r\nimport imagen from './../../logo.png'\r\nimport iconOption from \"./../../iconLogOut.png\"\r\nimport { AiOutlineShop, AiOutlineSolution, AiOutlineUser, AiOutlineTeam } from \"react-icons/ai\";\r\nimport { Dropdown, Menu } from 'antd';\r\nimport { AppstoreOutlined, DownOutlined, MailOutlined, SettingOutlined } from '@ant-design/icons';\r\nimport 'antd/dist/antd.css';\r\nimport SubMenu from 'antd/lib/menu/SubMenu';\r\nimport MenuListBg from '../../interfaces/menu';\r\n\r\n\r\n\r\ninterface MenuBGProps\r\n{\r\n  items: MenuListBg[]\r\n  tituloPagina :string;\r\n}\r\nexport default class MenuBG extends React.Component<MenuBGProps, any>\r\n{\r\n \r\n constructor(props:any)\r\n {   \r\n    super(props);\r\n }\r\n  render()\r\n  {\r\n    return (<>\r\n        <nav className=\"nav-bar flex row\" >\r\n          <img src= {imagen} width=\"230px\" height=\"70px\" ></img>\r\n          <section className=\"navegacion flex row\" >\r\n                <div style={{height:\"100%\", justifyContent:\"start\", marginTop:\"40px\"}} className=\"flex colum\"  >\r\n                    JEFFERSON LEONEL VELEZ LARREA\r\n                    <p>0967770769</p>\r\n                </div>\r\n                <div style={{height:\"100%\", alignItems:\"start\", marginTop:\"40px\"}} className=\"flex\">                    \r\n                <section className=\"flex row\" >\r\n                    <div>   \r\n                      <Dropdown  overlay={\r\n                          <Menu>\r\n                          <Menu.Item key=\"0\">\r\n                            <a href=\"#\">Perfil</a>\r\n                          </Menu.Item>\r\n                          <Menu.Item key=\"1\">\r\n                            <a href=\"#\">Salir</a>\r\n                          </Menu.Item>                          \r\n                          </Menu>\r\n                      } trigger={['click']}>\r\n                      <a style={{color:\"white\", textAlign:\"center\", border:\"1px\", borderStyle:\"solid\",borderColor:\"white\" , padding:\"8px\", borderRadius:\"15px\", width:\"100%\"}} className=\"ant-dropdown-link flex\" onClick={e => e.preventDefault()}>\r\n                        OPCIONES\r\n                      </a> \r\n                      </Dropdown>\r\n                </div>                      \r\n                </section>\r\n                </div>\r\n          </section>\r\n        </nav>        \r\n        <div className=\"container-menu\">\r\n          <MenuBurger pageWrapId={ \"page-wrap\" } outerContainerId={ \"outer-container\" } >\r\n              <div id=\"items-menu\" style={{display:\"flex\", flexDirection:\"column\"}}>\r\n                <Menu\r\n                  style={{ width: 256 , borderColor:\"white\"}}\r\n                  defaultSelectedKeys={['1']}\r\n                  defaultOpenKeys={['sub1']}\r\n                  mode=\"inline\"\r\n                  >                    \r\n                    {\r\n                        this.props.items.map((recorre, id)=>{\r\n                          return (\r\n                            <SubMenu className=\"submenu\"  key={id} icon={recorre.icon} title={recorre.nombre}>\r\n                              {\r\n                                recorre.items.map((recorreItem, idItem)=>{\r\n                                  return (\r\n                                    <Menu.Item key={ `${idItem}-${id}`}>{recorreItem.nombre}</Menu.Item>                              \r\n                                  )\r\n                                })\r\n                              }                              \r\n                            </SubMenu>                   \r\n                        )                          \r\n                        })\r\n                    }\r\n\r\n                </Menu>\r\n                </div>                         \r\n          </MenuBurger>          \r\n          <div className=\"descripcion-pantalla\" >\r\n                    {this.props.tituloPagina}\r\n          </div>\r\n        </div>\r\n        <div style={{marginTop:\"60px\"}}>\r\n            {this.props.children}\r\n        </div>               \r\n    </>)\r\n  }\r\n}","import React from 'react'\r\nimport { AiOutlineShop, AiOutlineSolution, AiOutlineUser } from 'react-icons/ai'\r\n\r\nconst menu = [\r\n    {\r\n        nombre:\"Activos y Pasivos\", \r\n        icon: <AiOutlineUser></AiOutlineUser>,\r\n        items: [\r\n            {\r\n                nombre:\"Total Pasivos\"\r\n            }, \r\n            {\r\n                nombre:\"Corrientes\"\r\n            },\r\n            {\r\n                nombre:\"Ahorros\"\r\n            },\r\n            {\r\n                nombre:\"Depositos A Plazo\"\r\n            },\r\n            {\r\n                nombre:\"Cartera y Conrigente\"\r\n            }\r\n     ] \r\n   },\r\n   {\r\n        nombre:\"Cobertura\", \r\n        icon: <AiOutlineShop></AiOutlineShop>,\r\n        items: [\r\n            {\r\n                nombre:\"Total Cobertura\"\r\n            }     \r\n        ]\r\n   },\r\n    {\r\n        nombre:\"Informes\", \r\n        icon: <AiOutlineSolution></AiOutlineSolution>,\r\n        items: [\r\n            {\r\n                nombre:\"opcion1\"\r\n            }, \r\n            {\r\n                nombre:\"opcion2\"\r\n            }]\r\n   },\r\n   {\r\n       nombre:\"Seguridad\", \r\n       icon: <AiOutlineUser></AiOutlineUser>,\r\n       items: [\r\n           {\r\n               nombre:\"Usuarios\"}, \r\n           {\r\n               nombre:\"Roles\"}\r\n        ] \r\n   },\r\n   {\r\n       nombre:\"Configuraciones\", \r\n       icon: <AiOutlineShop></AiOutlineShop>,\r\n       items: [{nombre:\"opcion1\"}, {nombre:\"opcion2\"}]\r\n   }\r\n]\r\n\r\nexport default menu ","const filtroCatalogoValues = [\r\n  {\r\n    id: \"1\",\r\n    campo: \"empresa\",\r\n    value: \"difare\"\r\n  },\r\n  {\r\n    id: \"2\",\r\n    campo: \"empresa\",\r\n    value: \"economic\"\r\n  },\r\n  {\r\n    id: \"3\",\r\n    campo: \"region\",\r\n    value: \"costa\"\r\n  },\r\n  {\r\n    id: \"4\",\r\n    campo: \"region\",\r\n    value: \"sierra\"\r\n  },\r\n  {\r\n    id: \"5\",\r\n    campo: \"region\",\r\n    value: \"galapagos\"\r\n  },\r\n  {\r\n    id: \"6\",\r\n    campo: \"especializacion\",\r\n    value: \"ingeniero\"\r\n  },\r\n  {\r\n    id: \"7\",\r\n    campo: \"especializacion\",\r\n    value: \"doctor\"\r\n  },\r\n  {\r\n    id: \"8\",\r\n    campo: \"plaza\",\r\n    value: \"plaza1\"\r\n  },\r\n  {\r\n    id: \"9\",\r\n    campo: \"plaza\",\r\n    value: \"plaza2\"\r\n  },\r\n  {\r\n    id: \"10\",\r\n    campo: \"oficiona\",\r\n    value: \"oficina1\"\r\n  },\r\n  {\r\n    id: \"11\",\r\n    campo: \"oficiona\",\r\n    value: \"oficina2\"\r\n  },\r\n  {\r\n    id: \"12\",\r\n    campo: \"oficial\",\r\n    value: \"oficial1\"\r\n  },\r\n  {\r\n    id: \"13\",\r\n    campo: \"oficial\",\r\n    value: \"oficial2\"\r\n  },\r\n  {\r\n    id: \"14\",\r\n    campo: \"segmentacion\",\r\n    value: \"1\"\r\n  },\r\n  {\r\n    id: \"15\",\r\n    campo: \"segmentacion\",\r\n    value: \"2\"\r\n  },\r\n  {\r\n    id: \"16\",\r\n    campo: \"tipo de cliente\",\r\n    value: \"1\"\r\n  },\r\n  {\r\n    id: \"17\",\r\n    campo: \"tipo de cliente\",\r\n    value: \"2\"\r\n  },\r\n  {\r\n    id: \"18\",\r\n    campo: \"tipo de cliente\",\r\n    value: \"3\"\r\n  }\r\n]\r\n\r\nexport default filtroCatalogoValues\r\n","const informacionFiltro = [\r\n    {\r\n      campo : \"empresa\",\r\n      tipoDato : \"string\",\r\n      esCatalogo: true\r\n    \r\n    },\r\n    {\r\n      campo : \"region\",\r\n      tipoDato : \"string\",\r\n      esCatalogo: true\r\n    },\r\n    {\r\n      campo : \"especializacion\",\r\n      tipoDato : \"string\",\r\n      esCatalogo: true\r\n    },\r\n    {\r\n      campo : \"plaza\",\r\n      tipoDato : \"string\",\r\n      esCatalogo: true\r\n    },\r\n    {\r\n      campo : \"oficiona\",\r\n      tipoDato : \"string\",\r\n      esCatalogo: true\r\n    },\r\n    {\r\n      campo : \"oficial\",\r\n      tipoDato : \"string\",\r\n      esCatalogo: true\r\n    },\r\n    {\r\n      campo : \"segmentacion\",\r\n      tipoDato : \"string\",\r\n      esCatalogo: true\r\n    },\r\n    {\r\n      campo : \"tipo de cliente\",\r\n      tipoDato : \"string\",\r\n      esCatalogo: true\r\n    },\r\n    {\r\n      campo : \"saldo\",\r\n      tipoDato : \"number\",\r\n      esCatalogo: false\r\n    }\r\n  ]\r\n\r\n  export default informacionFiltro","const CatalogoCampos = [\r\n    {\r\n        cammpo:\"empresa\"\r\n    },\r\n    {\r\n        cammpo:\"region\"\r\n    },\r\n    {\r\n        cammpo:\"especializacion\"\r\n    },\r\n    {\r\n        cammpo:\"plaza\"\r\n    },\r\n    {\r\n        cammpo:\"oficiona\"\r\n    }, \r\n    {\r\n        cammpo:\"oficial\"\r\n    },\r\n    {\r\n        cammpo:\"area comercial\"\r\n    },\r\n    {\r\n        cammpo:\"segmentacion\"\r\n    },\r\n    {\r\n        cammpo:\"tipo de cliente\"\r\n    },\r\n    {\r\n        cammpo:\"saldo\"\r\n    }         \r\n  ]\r\n\r\nexport default CatalogoCampos","\r\nimport { GridCellParams, GridColDef, GridFilterItem, GridStateColDef } from '@material-ui/data-grid';\r\nimport './App.css';\r\nimport GridViewBG from './componentes/gridViewBG/gridViewBG';\r\nimport MenuBG from './componentes/menuBG/menuBG';\r\nimport data from './data.json'\r\nimport 'antd/dist/antd.css';\r\nimport MenuListBg from './interfaces/menu';\r\nimport { AiOutlineShop, AiOutlineSolution, AiOutlineUser } from 'react-icons/ai';\r\nimport { ColumnsType } from 'antd/lib/table';\r\nimport menuBG from './menu'\r\nimport ColumnasGrupo from './interfaces/columnasGrupos';\r\nimport DataSet from './interfaces/cuentaAhorros';\r\nimport filtroCatalogoValues from './data/catalogoValores';\r\n\r\nimport informacionFiltro from './data/informacionFiltro';\r\nimport CatalogoCampos from './data/catalogoCampo';\r\nimport FiltrosServices from './servicios/filtros';\r\nimport { catalogosCampos, catalogosValues, informacionFiltros } from './interfaces/filtros';\r\nimport { useState } from 'react';\r\n\r\nfunction App() {\r\n  const menu : MenuListBg[] = menuBG;\r\n  const [filtrosCampos, setFiltrosCampos] = useState(Array<informacionFiltros>())\r\n  const [filtrosValues, setFiltrosValues] = useState(Array<catalogosValues>())\r\n  const [filtrosCampoCatalogo,setFiltrosCampoCatalogo] =  useState(Array<catalogosCampos>())  \r\n  const columnsGroupResumen :ColumnasGrupo[] = [\r\n    {\r\n      tituloGrupo: \"\",\r\n      items : [{\r\n        dataIndex: 'titulo', \r\n        key:'titulo', \r\n        show:true,\r\n        title: '', \r\n        width: 100,\r\n      }\r\n    ]\r\n    },\r\n    {\r\n    tituloGrupo:\"ANTERIOR\",\r\n    items: [\r\n        {\r\n          dataIndex: 'anterior', \r\n          key:'anterior', \r\n          title: 'Cuentas', \r\n          width: 100,\r\n          show:true,\r\n          render: (objeto:any) =>  objeto.cuenta\r\n        },\r\n        {\r\n          dataIndex: 'anterior', \r\n          key:'anterior', \r\n          title: 'Saldos', \r\n          show:true,\r\n          width: 100,\r\n          render: (objeto:any) =>  objeto.saldo\r\n        },\r\n        {\r\n          dataIndex: 'anterior', \r\n          key:'anterior', \r\n          title: 'Tasa', \r\n          show:true,\r\n          width: 100,\r\n          render: (objeto:any) =>  objeto.tasa\r\n        }\r\n      ]\r\n    },\r\n    {\r\n    tituloGrupo:\"ACTUAL\",\r\n    items: [\r\n      {\r\n        dataIndex: 'actual', \r\n        key:'actual', \r\n        title: 'Cuentas', \r\n        show:true,\r\n        width: 100,\r\n        render: (objeto:any) =>  objeto.cuenta\r\n      },\r\n      {\r\n        dataIndex: 'actual', \r\n        key:'actual', \r\n        title: 'Saldos', \r\n        show:true,\r\n        width: 100,\r\n        render: (objeto:any) =>  objeto.saldo\r\n      },\r\n      {\r\n        dataIndex: 'actual', \r\n        key:'actual', \r\n        title: 'Tasa', \r\n        show:true,\r\n        width: 100,\r\n        render: (objeto:any) =>  objeto.tasa\r\n      }\r\n    ]\r\n    },\r\n    {\r\n      tituloGrupo:\"VARIACION\",\r\n      items: [      \r\n        {\r\n          dataIndex: 'variacion', \r\n          key:'variacion', \r\n          title: 'Saldos',\r\n          show:true, \r\n          width: 100,\r\n          render: (objeto:any) =>  objeto.saldo\r\n        },\r\n        {\r\n          dataIndex: 'actual', \r\n          key:'actual', \r\n          title: 'Tasa', \r\n          show:true,\r\n          width: 100,\r\n          render: (objeto:any) =>  objeto.tasa\r\n        }\r\n      ]\r\n    }  \r\n  ]\r\n  const columnsGroup :ColumnasGrupo[] = [\r\n    {\r\n      tituloGrupo: \"\",\r\n      items : [{\r\n        dataIndex: 'codigo', \r\n        key:'codigo', \r\n        title: 'Codigo', \r\n        show:true,\r\n        width: 100,\r\n      },\r\n      {\r\n        dataIndex: 'descripcion', \r\n        key:'descripcion', \r\n        title: 'Descripcion', \r\n        show:true,\r\n        width: 100,\r\n      }\r\n    ]\r\n    },\r\n    {\r\n    tituloGrupo:\"ANTERIOR\",\r\n    items: [\r\n        {\r\n          dataIndex: 'anterior', \r\n          key:'anterior', \r\n          title: 'Cuentas', \r\n          show:true,\r\n          width: 100,\r\n          render: (objeto:any) =>  objeto.cuenta\r\n        },\r\n        {\r\n          dataIndex: 'anterior', \r\n          key:'anterior', \r\n          title: 'Saldos', \r\n          show:true,\r\n          width: 100,\r\n          render: (objeto:any) =>  objeto.saldo\r\n        },\r\n        {\r\n          dataIndex: 'anterior', \r\n          key:'anterior', \r\n          title: 'Tasa', \r\n          show:true,\r\n          width: 100,\r\n          render: (objeto:any) =>  objeto.tasa\r\n        }\r\n      ]\r\n    },\r\n    {\r\n    tituloGrupo:\"ACTUAL\",\r\n    items: [\r\n      {\r\n        dataIndex: 'actual', \r\n        key:'actual', \r\n        title: 'Cuentas', \r\n        show:true,\r\n        width: 100,\r\n        render: (objeto:any) =>  objeto.cuenta\r\n      },\r\n      {\r\n        dataIndex: 'actual', \r\n        key:'actual', \r\n        title: 'Saldos',\r\n        show:true, \r\n        width: 100,\r\n        render: (objeto:any) =>  objeto.saldo\r\n      },\r\n      {\r\n        dataIndex: 'actual', \r\n        key:'actual', \r\n        title: 'Tasa',\r\n        show:true, \r\n        width: 100,\r\n        render: (objeto:any) =>  objeto.tasa\r\n      }\r\n    ]\r\n    },\r\n    {\r\n      tituloGrupo:\"VARIACION\",\r\n      items: [      \r\n        {\r\n          dataIndex: 'variacion', \r\n          key:'variacion', \r\n          title: 'Saldos',\r\n          show:true, \r\n          width: 100,\r\n          render: (objeto:any) =>  objeto.saldo\r\n        },\r\n        {\r\n          dataIndex: 'actual', \r\n          key:'actual', \r\n          title: 'Tasa', \r\n          show:true,\r\n          width: 100,\r\n          render: (objeto:any) =>  objeto.tasa\r\n        }\r\n      ]\r\n    }  \r\n  ]\r\n\r\n  let rows = new Array<DataSet>();\r\n  for(let recorre = 0; recorre<10; recorre++)\r\n  {\r\n    rows.push({\r\n      key: recorre+1,\r\n      codigo : (recorre +1).toString(),\r\n      descripcion: \"descripcion \",\r\n      anterior: {cuenta:80.3, saldo : 42.1, tasa:31.3},\r\n      actual: {cuenta:56.21, saldo : 2.4, tasa:34.42},\r\n      variacion: {cuenta:62.5, saldo : 2.6, tasa:32.12}    \r\n})\r\n  }\r\n  const onOpenDetalle = (e:any) : any =>\r\n  {\r\n    console.log(e) //objeto obtenido cuando se abre el detalle\r\n    const columns :any[] = [\r\n        {\r\n          dataIndex: 'anterior', \r\n          key:'anterior', \r\n          title: 'Cuentas', \r\n          width: 100,\r\n          render: (objeto:any) =>  objeto.cuenta\r\n        },\r\n        {\r\n          dataIndex: 'anterior', \r\n          key:'anterior', \r\n          title: 'Saldos', \r\n          width: 100,\r\n          render: (objeto:any) =>  objeto.saldo\r\n        },\r\n        {\r\n          dataIndex: 'anterior', \r\n          key:'anterior', \r\n          title: 'Tasa', \r\n          width: 100,\r\n          render: (objeto:any) =>  objeto.tasa\r\n        },\r\n        {\r\n          dataIndex: 'actual', \r\n          key:'actual', \r\n          title: 'Cuentas', \r\n          width: 100,\r\n          render: (objeto:any) =>  objeto.cuenta\r\n        },\r\n        {\r\n          dataIndex: 'actual', \r\n          key:'actual', \r\n          title: 'Saldos', \r\n          width: 100,\r\n          render: (objeto:any) =>  objeto.saldo\r\n        },\r\n        {\r\n          dataIndex: 'actual', \r\n          key:'actual', \r\n          title: 'Tasa', \r\n          width: 100,\r\n          render: (objeto:any) =>  objeto.tasa\r\n        },\r\n        {\r\n          dataIndex: 'variacion', \r\n          key:'variacion', \r\n          title: 'Cuentas', \r\n          width: 100,\r\n          render: (objeto:any) =>  objeto.cuenta\r\n        },\r\n        {\r\n          dataIndex: 'variacion', \r\n          key:'variacion', \r\n          title: 'Saldos', \r\n          width: 100,\r\n          render: (objeto:any) =>  objeto.saldo\r\n        },\r\n        {\r\n          dataIndex: 'variacion', \r\n          key:'variacion', \r\n          title: 'Tasa', \r\n          width: 100,\r\n          render: (objeto:any) =>  objeto.tasa\r\n        }\r\n    ] \r\n\r\n    let rows = new Array<DataSet>();\r\n    for(let recorre = 0; recorre<10; recorre++)\r\n    {\r\n      rows.push({\r\n        key: recorre+1,\r\n        codigo : (recorre +1).toString(),\r\n        descripcion: \"descripcion\",\r\n        anterior: {cuenta:20.1, saldo : 4.3, tasa:33.21},\r\n        actual: {cuenta:40.21, saldo : 2.1, tasa:30.12},\r\n        variacion: {cuenta:22.21, saldo : 2.6, tasa:32.31}      \r\n    })\r\n  }\r\n    return {columns: columns, rows: rows}\r\n  }\r\n\r\n  const onAplicaFiltro = (e:any)=>{\r\n    console.log(\"datow filtros\")\r\n    console.log(e)\r\n  }\r\n  \r\n\r\n  const meses:any[] = [\"Enero\",\"Febrero\", \"Marzo\", \"Abril\", \"Mayo\", \"Junio\", \"Julio\", \"Agosto\", \"Septiembre\", \"Noviembre\", \"Diciembre\"]\r\n  const dataSimuladaGrafico:any[] = [65, 59, 80, 81, 56, 55, 40, 52, 48, 12,11, 80];\r\n  const diasMeses = ()=> { \r\n    let retorno:any[] = []\r\n    for(var i=1;i<32; i++)\r\n    {  \r\n      retorno.push(i)\r\n    }\r\n\r\n    return retorno;\r\n   }\r\n  const onBuscar = (e:any)=>{\r\n    console.log(e)\r\n  }\r\n\r\n  const onLoad = (e:any)=>{\r\n\r\n  }\r\n\r\n  \r\n  \r\n  \r\n  return (\r\n      <> \r\n        <MenuBG items={menu} tituloPagina=\"RESUMEN CUENTAS DE AHORROS\" >\r\n          <div className=\"flex column\" style={{justifyContent:\"center\"}}  >\r\n            <GridViewBG\r\n            onBuscar={onBuscar}\r\n            buttonDownload={true} \r\n            buttonFilter={true}  \r\n            onOpenDetalle={onOpenDetalle} \r\n            height={100} \r\n            columns={columnsGroup} \r\n            rows={rows}          \r\n            onLoad={onLoad}\r\n            columnsTotal ={columnsGroupResumen}\r\n            rowsTotal={[{\r\n              \r\n              codigo : 1,\r\n              titulo:\"Total\",\r\n              descripcion: \"descripcion\",\r\n              anterior: {cuenta:120.32, saldo : 6.4, tasa:128.98},\r\n              actual: {cuenta:130.00, saldo : 12.3, tasa:30.32},\r\n              variacion: {cuenta:122.32, saldo : 2.12, tasa:31.56}  \r\n            }]}     \r\n            width={1200}\r\n            tipoColumna=\"grupo\"\r\n            filtroCatalogoValues = {filtroCatalogoValues}\r\n            filtroCatalogoCampos = { CatalogoCampos}             \r\n            filtroInformacion = {informacionFiltro}\r\n            onAplicarFiltro = {onAplicaFiltro}\r\n            dataSetGraficos={{\r\n            mensual:{\r\n              labels: diasMeses(),\r\n              datasets: [{\r\n                label: 'Mensual',\r\n                data: dataSimuladaGrafico,\r\n                fill: false,\r\n                borderColor: 'rgb(75, 192, 192)',\r\n                tension: 0.1\r\n              },            \r\n            ]\r\n            },\r\n            anual:{\r\n              labels: meses,\r\n              datasets: [{\r\n                label: 'Anual',\r\n                data: dataSimuladaGrafico,\r\n                fill: false,\r\n                borderColor: 'rgb(75, 192, 192)',\r\n                tension: 0.1\r\n              },            \r\n            ]\r\n            }\r\n          \r\n          }}\r\n            />            \r\n          </div>\r\n        </MenuBG>        \r\n      </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}